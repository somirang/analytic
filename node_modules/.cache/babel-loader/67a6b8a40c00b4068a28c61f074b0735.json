{"ast":null,"code":"import _regeneratorRuntime from\"/Users/haesol/Desktop/mediround-user-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/haesol/Desktop/mediround-user-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/haesol/Desktop/mediround-user-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/haesol/Desktop/mediround-user-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/haesol/Desktop/mediround-user-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{getHospitalQuote,respondQuote}from\"../../../api/quote\";import Button from\"../../../components/Button/Button\";import{RequestBody,RequestHeader}from\"../../../components/Card/RequestCard\";import InfoInput from\"../../../components/Input/InfoInput\";import ProcInput from\"../../../components/Input/ProcInput\";import purple_go_back_arrow_icon from\"../../../images/purple-go-back-arrow-icon.svg\";import{QuoteDetailHeader}from\"../../My/QuoteDetail\";import{EmptyDesc,Loading}from\"./Request\";import\"./Preview.scss\";import{getInterestedProcsFromQuote,getKstDatetime}from\"../../../utils\";import{useSelector}from\"react-redux\";import{FormattedMessage}from\"react-intl\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var initProc={name:\"\"};var Preview=function Preview(props){var _useState=useState([initProc]),_useState2=_slicedToArray(_useState,2),recommendedProcs=_useState2[0],setRecommendedProcs=_useState2[1];var _useState3=useState([\"\",\"\",\"\"]),_useState4=_slicedToArray(_useState3,2),videoConfLinks=_useState4[0],setVideoConfLinks=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isSending=_useState8[0],setIsSending=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),previewQuote=_useState10[0],setPreviewQuote=_useState10[1];var hospital=useSelector(function(state){return state.hospital.current;});var updateNthLink=function updateNthLink(nth,newLink){var newLinks=_toConsumableArray(videoConfLinks);newLinks[nth]=newLink;setVideoConfLinks(newLinks);};var updateWrapper=function updateWrapper(nth){return function(key,val){var newProcs=_toConsumableArray(recommendedProcs);var newProc=_objectSpread({},newProcs[nth]);newProc[key]=val;newProcs[nth]=newProc;setRecommendedProcs(newProcs);};};var addMoreProc=function addMoreProc(){var newProcs=_toConsumableArray(recommendedProcs);newProcs.push(initProc);setRecommendedProcs(newProcs);};var deleteNthProc=function deleteNthProc(nth){return function(){var newProcs=_toConsumableArray(recommendedProcs);newProcs.splice(nth,1);setRecommendedProcs(newProcs);};};useEffect(function(){setIsLoading(true);var fetchRequestQuotes=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var quoteData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getHospitalQuote({hid:\"h1\",qid:props.match.params.quoteId});case 2:quoteData=_context.sent;return _context.abrupt(\"return\",quoteData.result);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchRequestQuotes(){return _ref.apply(this,arguments);};}();fetchRequestQuotes().then(function(quote){setPreviewQuote(quote);setIsLoading(false);}).catch(function(e){console.error(\"Preview\",e);setIsLoading(false);});},[]);var sendQuoteResponse=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var isResponseSuccess;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setIsSending(true);_context2.next=3;return respondQuote({hid:\"h1\",qid:props.match.params.quoteId,meetLinks:videoConfLinks,suggestedSurgeries:recommendedProcs,responseTime:new Date().getTime()});case 3:isResponseSuccess=_context2.sent;if(isResponseSuccess){setIsSending(false);props.history.push(\"/hospital/my/sent\");}else{setIsSending(false);// TODO: setShowErrorModal(true);\n}case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function sendQuoteResponse(){return _ref2.apply(this,arguments);};}();var isResponseFilled=function isResponseFilled(){var isVideoConfLinksFilled=videoConfLinks.every(function(link){return link!==\"\";});return isVideoConfLinksFilled;};return/*#__PURE__*/_jsx(_Fragment,{children:isLoading?/*#__PURE__*/_jsx(Loading,{containerType:\"preview\"}):!previewQuote?/*#__PURE__*/_jsx(EmptyDesc,{message:\"No quote found\"}):/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-preview-background-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"hospital-mypage-preview-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-go-back\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"hospital-mypage-go-back-box\",onClick:function onClick(){return props.history.push(\"/hospital/my\");},children:[/*#__PURE__*/_jsx(\"img\",{className:\"hospital-mypage-go-back-icon\",src:purple_go_back_arrow_icon,alt:\"mypage-go-back-icon\"}),/*#__PURE__*/_jsx(FormattedMessage,{id:\"myPage\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"hospital-mypage-sub-container-collection\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hospital-mypage-sub-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-sub-container-title\",children:\"Request\"}),/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-sub-container-item\",children:/*#__PURE__*/_jsx(RequestHeader,{userName:previewQuote.userInfo.name,receivedTime:getKstDatetime(previewQuote.quoteInfo.timestamp)})}),/*#__PURE__*/_jsx(RequestBody,{quote:previewQuote.quoteInfo.quote,comment:previewQuote.quoteInfo.comment})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"hospital-mypage-sub-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-sub-container-title\",children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"quote.yourQuotes\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-sub-container-description\",children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"quote.previewOfYourQuotes\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"hospital-mypage-quote-preview-container\",children:[/*#__PURE__*/_jsx(QuoteDetailHeader,{name:previewQuote.userInfo.name,hospitalName:hospital.name,hospitalAddr:hospital.addr,hospitalAbout:hospital.about,interestedProcedures:getInterestedProcsFromQuote(previewQuote.quoteInfo.quote),isPreview:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"hospital-mypage-quote-preview-proc-recommend-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-quote-preview-proc-recommend-title\",children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"quote.procedureRecommendation\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-quote-preview-proc-recommend-input-collection\",children:recommendedProcs.map(function(proc,ind){return/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-quote-preview-proc-recommend-input-container\",children:/*#__PURE__*/_jsx(ProcInput,_objectSpread(_objectSpread({},proc),{},{update:updateWrapper(ind),deletable:ind!==0,deleteHandler:deleteNthProc(ind)}))},ind);})}),/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-quote-preview-proc-recommend-more-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"hospital-mypage-quote-preview-proc-recommend-more-text\",onClick:addMoreProc,children:[/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-quote-preview-proc-recommend-more-plus\",children:\"+\"}),\" \",/*#__PURE__*/_jsx(FormattedMessage,{id:\"quote.addMoreProcedure\"})]})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"hospital-mypage-sub-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-sub-container-title\",children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"quote.videoConferenceLink\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-sub-container-description\",children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"quote.videoConferencePut\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-video-conf-link-input-collection\",children:videoConfLinks.map(function(link,ind){return/*#__PURE__*/_jsx(InfoInput,{title:\"Day \".concat((ind+1).toString()),value:link,onChange:function onChange(e){return updateNthLink(ind,e.target.value);}},ind);})}),/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-send-quote-button-container\",children:/*#__PURE__*/_jsx(Button,{text:\"Send quote\",shape:\"round\",theme:\"primary\",onClick:sendQuoteResponse,isDisabled:!isResponseFilled(),isLoading:isSending})})]})]})]})})});};export default Preview;","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web/src/pages/Hospital/Containers/Preview.tsx"],"names":["React","useEffect","useState","getHospitalQuote","respondQuote","Button","RequestBody","RequestHeader","InfoInput","ProcInput","QuoteDetailHeader","EmptyDesc","Loading","getInterestedProcsFromQuote","getKstDatetime","useSelector","FormattedMessage","initProc","name","Preview","props","recommendedProcs","setRecommendedProcs","videoConfLinks","setVideoConfLinks","isLoading","setIsLoading","isSending","setIsSending","previewQuote","setPreviewQuote","hospital","state","current","updateNthLink","nth","newLink","newLinks","updateWrapper","key","val","newProcs","newProc","addMoreProc","push","deleteNthProc","splice","fetchRequestQuotes","hid","qid","match","params","quoteId","quoteData","result","then","quote","catch","e","console","error","sendQuoteResponse","meetLinks","suggestedSurgeries","responseTime","Date","getTime","isResponseSuccess","history","isResponseFilled","isVideoConfLinksFilled","every","link","purple_go_back_arrow_icon","userInfo","quoteInfo","timestamp","comment","addr","about","map","proc","ind","toString","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { getHospitalQuote, respondQuote } from \"../../../api/quote\";\nimport Button from \"../../../components/Button/Button\";\nimport {\n  RequestBody,\n  RequestHeader,\n} from \"../../../components/Card/RequestCard\";\nimport InfoInput from \"../../../components/Input/InfoInput\";\nimport ProcInput from \"../../../components/Input/ProcInput\";\nimport purple_go_back_arrow_icon from \"../../../images/purple-go-back-arrow-icon.svg\";\nimport { QuoteDetailHeader } from \"../../My/QuoteDetail\";\nimport { EmptyDesc, Loading, QuoteDataProps } from \"./Request\";\nimport \"./Preview.scss\";\nimport { getInterestedProcsFromQuote, getKstDatetime } from \"../../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../store\";\nimport { FormattedMessage } from \"react-intl\";\n\nexport interface Procedure {\n  name: string;\n  priceMin?: string;\n  priceMax?: string;\n  methodology?: string;\n  operationTime?: string;\n  anesthesiaType?: string;\n  recoveryTime?: string;\n  sutureRemovalTime?: string;\n  warning?: string;\n  afterCare?: string;\n}\n\nexport interface Hospital {\n  id?: string;\n  name?: string;\n  addr?: string;\n  about?: string;\n  procs?: string[];\n}\n\nconst initProc: Procedure = { name: \"\" };\n\nconst Preview = (props: RouteComponentProps<any>) => {\n  const [recommendedProcs, setRecommendedProcs] = useState<Procedure[]>([\n    initProc,\n  ]);\n  const [videoConfLinks, setVideoConfLinks] = useState<string[]>([\"\", \"\", \"\"]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSending, setIsSending] = useState(false);\n  const [previewQuote, setPreviewQuote] = useState<QuoteDataProps>();\n  const hospital: Hospital = useSelector(\n    (state: RootState) => state.hospital.current,\n  );\n\n  const updateNthLink = (nth: number, newLink: string) => {\n    const newLinks = [...videoConfLinks];\n    newLinks[nth] = newLink;\n    setVideoConfLinks(newLinks);\n  };\n\n  const updateWrapper = (nth: number) => (key: string, val: any) => {\n    const newProcs = [...recommendedProcs];\n    const newProc: { [key: string]: any; name: string } = { ...newProcs[nth] };\n    newProc[key] = val;\n    newProcs[nth] = newProc;\n    setRecommendedProcs(newProcs);\n  };\n\n  const addMoreProc = () => {\n    const newProcs = [...recommendedProcs];\n    newProcs.push(initProc);\n    setRecommendedProcs(newProcs);\n  };\n\n  const deleteNthProc = (nth: number) => () => {\n    const newProcs = [...recommendedProcs];\n    newProcs.splice(nth, 1);\n    setRecommendedProcs(newProcs);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchRequestQuotes = async () => {\n      // TODO: get hospital Id\n      const quoteData = await getHospitalQuote({\n        hid: \"h1\",\n        qid: props.match.params.quoteId,\n      });\n      return quoteData.result;\n    };\n    fetchRequestQuotes()\n      .then((quote: QuoteDataProps) => {\n        setPreviewQuote(quote);\n        setIsLoading(false);\n      })\n      .catch((e) => {\n        console.error(\"Preview\", e);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const sendQuoteResponse = async () => {\n    setIsSending(true);\n    const isResponseSuccess = await respondQuote({\n      hid: \"h1\",\n      qid: props.match.params.quoteId,\n      meetLinks: videoConfLinks,\n      suggestedSurgeries: recommendedProcs,\n      responseTime: new Date().getTime(),\n    });\n    if (isResponseSuccess) {\n      setIsSending(false);\n      props.history.push(\"/hospital/my/sent\");\n    } else {\n      setIsSending(false);\n      // TODO: setShowErrorModal(true);\n    }\n  };\n\n  const isResponseFilled = () => {\n    const isVideoConfLinksFilled = videoConfLinks.every((link) => link !== \"\");\n    return isVideoConfLinksFilled;\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loading containerType=\"preview\" />\n      ) : !previewQuote ? (\n        <EmptyDesc message=\"No quote found\" />\n      ) : (\n        <div className=\"hospital-mypage-preview-background-container\">\n          <div className=\"hospital-mypage-preview-container\">\n            <div className=\"hospital-mypage-go-back\">\n              <div\n                className=\"hospital-mypage-go-back-box\"\n                onClick={() => props.history.push(\"/hospital/my\")}\n              >\n                <img\n                  className=\"hospital-mypage-go-back-icon\"\n                  src={purple_go_back_arrow_icon}\n                  alt=\"mypage-go-back-icon\"\n                />\n                <FormattedMessage id=\"myPage\" />\n              </div>\n            </div>\n            <div className=\"hospital-mypage-sub-container-collection\">\n              <div className=\"hospital-mypage-sub-container\">\n                <div className=\"hospital-mypage-sub-container-title\">\n                  Request\n                </div>\n                <div className=\"hospital-mypage-sub-container-item\">\n                  <RequestHeader\n                    userName={previewQuote.userInfo.name}\n                    receivedTime={getKstDatetime(\n                      previewQuote.quoteInfo.timestamp,\n                    )}\n                  />\n                </div>\n                <RequestBody\n                  quote={previewQuote.quoteInfo.quote}\n                  comment={previewQuote.quoteInfo.comment}\n                />\n              </div>\n              <div className=\"hospital-mypage-sub-container\">\n                <div className=\"hospital-mypage-sub-container-title\">\n                  <FormattedMessage id=\"quote.yourQuotes\" />\n                </div>\n                <div className=\"hospital-mypage-sub-container-description\">\n                  <FormattedMessage id=\"quote.previewOfYourQuotes\" />\n                </div>\n                <div className=\"hospital-mypage-quote-preview-container\">\n                  <QuoteDetailHeader\n                    name={previewQuote.userInfo.name}\n                    hospitalName={hospital.name!}\n                    hospitalAddr={hospital.addr!}\n                    hospitalAbout={hospital.about!}\n                    interestedProcedures={getInterestedProcsFromQuote(\n                      previewQuote.quoteInfo.quote,\n                    )}\n                    isPreview={true}\n                  />\n                  <div className=\"hospital-mypage-quote-preview-proc-recommend-container\">\n                    <div className=\"hospital-mypage-quote-preview-proc-recommend-title\">\n                      <FormattedMessage id=\"quote.procedureRecommendation\" />\n                    </div>\n                    <div className=\"hospital-mypage-quote-preview-proc-recommend-input-collection\">\n                      {recommendedProcs.map((proc, ind) => (\n                        <div\n                          key={ind}\n                          className=\"hospital-mypage-quote-preview-proc-recommend-input-container\"\n                        >\n                          <ProcInput\n                            {...proc}\n                            update={updateWrapper(ind)}\n                            deletable={ind !== 0}\n                            deleteHandler={deleteNthProc(ind)}\n                          />\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"hospital-mypage-quote-preview-proc-recommend-more-container\">\n                      <div\n                        className=\"hospital-mypage-quote-preview-proc-recommend-more-text\"\n                        onClick={addMoreProc}\n                      >\n                        <div className=\"hospital-mypage-quote-preview-proc-recommend-more-plus\">\n                          +\n                        </div>{\" \"}\n                        <FormattedMessage id=\"quote.addMoreProcedure\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"hospital-mypage-sub-container\">\n                <div className=\"hospital-mypage-sub-container-title\">\n                  <FormattedMessage id=\"quote.videoConferenceLink\" />\n                </div>\n                <div className=\"hospital-mypage-sub-container-description\">\n                  <FormattedMessage id=\"quote.videoConferencePut\" />\n                </div>\n                <div className=\"hospital-mypage-video-conf-link-input-collection\">\n                  {videoConfLinks.map((link, ind) => (\n                    <InfoInput\n                      key={ind}\n                      title={`Day ${(ind + 1).toString()}`}\n                      value={link}\n                      onChange={(e) => updateNthLink(ind, e.target.value)}\n                    />\n                  ))}\n                </div>\n                <div className=\"hospital-mypage-send-quote-button-container\">\n                  <Button\n                    text=\"Send quote\"\n                    shape=\"round\"\n                    theme=\"primary\"\n                    onClick={sendQuoteResponse}\n                    isDisabled={!isResponseFilled()}\n                    isLoading={isSending}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Preview;\n"]},"metadata":{},"sourceType":"module"}