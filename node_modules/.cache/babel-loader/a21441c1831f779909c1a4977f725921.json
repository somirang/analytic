{"ast":null,"code":"var _jsxFileName = \"/Users/haesol/Desktop/mediround-user-web-master/src/pages/Hospital/Containers/Schedule.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { fetchHospitalQuotes } from \"../../../api/quote\";\nimport ScheduleQuoteCard from \"../../../components/Card/Hospital/ScheduleQuoteCard\";\nimport { MATCHED } from \"../../../utils\";\nimport \"./CardListView.scss\";\nimport { Loading } from \"./Request\";\nimport { Legend } from \"./Sent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Schedule = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [scheduledQuotes, setScheduledQuotes] = useState([]);\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchRequestQuotes = async () => {\n      // TODO: get hospital Id\n      const quotesData = await fetchHospitalQuotes({\n        hid: \"h1\"\n      });\n      return quotesData.result.filter(quote => quote.status === MATCHED);\n    };\n\n    fetchRequestQuotes().then(quotes => {\n      setScheduledQuotes(quotes);\n      setIsLoading(false);\n    }).catch(e => {\n      console.error(\"Schedule\", e);\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hospital-card-list-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hospital-card-list\",\n        children: [/*#__PURE__*/_jsxDEV(Legend, {\n          mode: \"schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), scheduledQuotes.map((quote, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hospital-card-list-item\",\n          children: /*#__PURE__*/_jsxDEV(ScheduleQuoteCard, {\n            patientName: quote.userInfo.name,\n            timestamp: quote.consultTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Schedule, \"nMta9+bs3CyoGsAOHtQiD2tNaeU=\");\n\n_c = Schedule;\nexport default Schedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/pages/Hospital/Containers/Schedule.tsx"],"names":["React","useEffect","useState","fetchHospitalQuotes","ScheduleQuoteCard","MATCHED","Loading","Legend","Schedule","isLoading","setIsLoading","scheduledQuotes","setScheduledQuotes","fetchRequestQuotes","quotesData","hid","result","filter","quote","status","then","quotes","catch","e","console","error","map","i","userInfo","name","consultTime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,OAAOC,iBAAP,MAA8B,qDAA9B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAO,qBAAP;AACA,SAASC,OAAT,QAAwC,WAAxC;AACA,SAASC,MAAT,QAAuB,QAAvB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAMG,kBAAkB,GAAG,YAAY;AACrC;AACA,YAAMC,UAAU,GAAG,MAAMX,mBAAmB,CAAC;AAAEY,QAAAA,GAAG,EAAE;AAAP,OAAD,CAA5C;AACA,aAAOD,UAAU,CAACE,MAAX,CAAkBC,MAAlB,CACJC,KAAD,IAA2BA,KAAK,CAACC,MAAN,KAAiBd,OADvC,CAAP;AAGD,KAND;;AAOAQ,IAAAA,kBAAkB,GACfO,IADH,CACSC,MAAD,IAAY;AAChBT,MAAAA,kBAAkB,CAACS,MAAD,CAAlB;AACAX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJH,EAKGY,KALH,CAKUC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAc,UAAd,EAA0BF,CAA1B;AACAb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KARH;AASD,GAlBQ,EAkBN,EAlBM,CAAT;AAmBA,sBACE;AAAA,cACGD,SAAS,gBACR,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGE,eAAe,CAACe,GAAhB,CAAoB,CAACR,KAAD,EAAwBS,CAAxB,kBACnB;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,iCACE,QAAC,iBAAD;AACE,YAAA,WAAW,EAAET,KAAK,CAACU,QAAN,CAAeC,IAD9B;AAEE,YAAA,SAAS,EAAEX,KAAK,CAACY;AAFnB;AAAA;AAAA;AAAA;AAAA;AADF,WAA8CH,CAA9C;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJJ,mBADF;AAqBD,CA5CD;;GAAMnB,Q;;KAAAA,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchHospitalQuotes } from \"../../../api/quote\";\nimport ScheduleQuoteCard from \"../../../components/Card/Hospital/ScheduleQuoteCard\";\nimport { MATCHED } from \"../../../utils\";\nimport \"./CardListView.scss\";\nimport { Loading, QuoteDataProps } from \"./Request\";\nimport { Legend } from \"./Sent\";\n\nconst Schedule = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [scheduledQuotes, setScheduledQuotes] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchRequestQuotes = async () => {\n      // TODO: get hospital Id\n      const quotesData = await fetchHospitalQuotes({ hid: \"h1\" });\n      return quotesData.result.filter(\n        (quote: QuoteDataProps) => quote.status === MATCHED,\n      );\n    };\n    fetchRequestQuotes()\n      .then((quotes) => {\n        setScheduledQuotes(quotes);\n        setIsLoading(false);\n      })\n      .catch((e) => {\n        console.error(\"Schedule\", e);\n        setIsLoading(false);\n      });\n  }, []);\n  return (\n    <>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <div className=\"hospital-card-list-container\">\n          <div className=\"hospital-card-list\">\n            <Legend mode=\"schedule\" />\n            {scheduledQuotes.map((quote: QuoteDataProps, i) => (\n              <div className=\"hospital-card-list-item\" key={i}>\n                <ScheduleQuoteCard\n                  patientName={quote.userInfo.name}\n                  timestamp={quote.consultTime}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Schedule;\n"]},"metadata":{},"sourceType":"module"}