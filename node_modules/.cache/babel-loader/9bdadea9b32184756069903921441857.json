{"ast":null,"code":"var _jsxFileName = \"/Users/haesol/Desktop/mediround-user-web-master/src/pages/SignUp.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport UserPool, { getUser, toUserPoolAttr } from \"../aws/UserPool\";\nimport Button from \"../components/Button/Button\";\nimport InfoInput from \"../components/Input/InfoInput\";\nimport { useAuthContext } from \"../auth/auth\";\nimport \"./SignUp.scss\";\nimport { phoneLocaleList } from \"../utils\";\nimport CheckBox from \"../components/Input/CheckBox\";\nimport { postUser } from \"../api/user\";\nimport { FormattedMessage } from \"react-intl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignUpForm = props => {\n  _s();\n\n  const auth = useAuthContext();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [phoneLocale, setPhoneLocale] = useState(phoneLocaleList[0].value);\n  const [phoneDigit, setPhoneDigit] = useState(\"\");\n  const [cachedPhone, setCachedPhone] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rePassword, setRePassword] = useState(\"\");\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  const [codeRecvInProgress, setCodeRecvInProgress] = useState(false);\n  const [isConfirmCodeInProgress, setIsConfirmCodeInProgress] = useState(false);\n  const [isAgreed, setIsAgreed] = useState(false);\n  useEffect(() => {\n    // Decides when submit button should become available\n    if (isConfirmed && isAgreed) {\n      props.setSubmitReady(true);\n    } else {\n      props.setSubmitReady(false);\n    }\n  });\n  useEffect(() => {\n    // Determines phone number i.e. username\n    const fullPhone = phoneLocale + phoneDigit;\n    setPhone(fullPhone);\n  }, [phoneLocale, phoneDigit]);\n\n  const isReadyToSignUp = () => {\n    return name.trim() !== \"\" && email.trim() !== \"\" && phone.trim() !== \"\" && password === rePassword;\n  };\n\n  const signUpHandler = () => {\n    const trimmedEmail = email.trim();\n    const trimmedPhone = phone.trim();\n    const trimmedName = name.trim();\n    setCodeRecvInProgress(true);\n    const emailAttr = toUserPoolAttr(\"email\", trimmedEmail);\n    const phoneAttr = toUserPoolAttr(\"phone_number\", trimmedPhone);\n    UserPool.signUp(trimmedPhone, password, [emailAttr, phoneAttr], [], async (err, result) => {\n      if (err) {\n        console.log(\"Error\", err);\n      } else {\n        console.log(\"Success\", result);\n        setCachedPhone(trimmedPhone);\n        setPhone(trimmedPhone);\n        setEmail(trimmedEmail);\n        setName(trimmedName); // TODO: show error modal when failed\n\n        await postUser({\n          sub: result.userSub,\n          phone: trimmedPhone,\n          email: trimmedEmail,\n          name: trimmedName\n        });\n        setIsCodeSent(true);\n      }\n\n      setCodeRecvInProgress(false);\n    });\n  };\n\n  const resendCodeHandler = () => {\n    setCodeRecvInProgress(true);\n    const congitoUser = getUser(cachedPhone);\n    congitoUser.resendConfirmationCode(err => {\n      if (err) {\n        console.error(err);\n      } else {\n        setCodeRecvInProgress(false);\n      }\n    });\n  };\n\n  const confirmCodeHandler = () => {\n    setIsConfirmCodeInProgress(true);\n    const cognitoUser = getUser(phone);\n    cognitoUser.confirmRegistration(code, false, (err, data) => {\n      if (err) {\n        console.error(err);\n        setIsConfirmCodeInProgress(false);\n      } else {\n        auth === null || auth === void 0 ? void 0 : auth.authenticate(phone, password).then(res => {\n          console.log(\"Authenticated!\", res);\n          setIsConfirmed(true);\n        }).catch(err => {\n          console.error(\"Failed to authenticate!\", err);\n        }).finally(() => {\n          setIsConfirmCodeInProgress(false);\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(InfoInput, {\n      title: \"Name\",\n      titleId: \"signUp.name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoInput, {\n      title: \"Email\",\n      titleId: \"signUp.email\",\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoInput, {\n      title: \"Password (at least 8 characters)\",\n      titleId: \"signUp.password\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoInput, {\n      title: \"Re-enter password\",\n      titleId: \"signUp.reEnterPassword\",\n      type: \"password\",\n      value: rePassword,\n      onChange: e => setRePassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoInput, {\n      title: \"Phone number\",\n      titleId: \"signUp.phoneNumber\",\n      type: \"tel\",\n      value: phoneDigit,\n      onChange: e => setPhoneDigit(e.target.value),\n      buttonText: isCodeSent && phone === cachedPhone ? \"재전송\" : \"코드 전송\",\n      buttonTextId: isCodeSent && phone === cachedPhone ? \"button.reSend\" : \"button.sendCode\",\n      buttonDisabled: !isReadyToSignUp(),\n      onButtonClick: isCodeSent && phone === cachedPhone ? resendCodeHandler : signUpHandler,\n      buttonLoading: codeRecvInProgress,\n      optionVals: phoneLocaleList.map(obj => obj.value),\n      optionKeys: phoneLocaleList.map(obj => obj.icon + \" \" + obj.value),\n      onSelectChange: e => setPhoneLocale(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), isCodeSent && /*#__PURE__*/_jsxDEV(InfoInput, {\n      title: \"Code\",\n      value: code,\n      onChange: e => setCode(e.target.value),\n      buttonText: isConfirmed ? \"\" : \"확인\",\n      onButtonClick: confirmCodeHandler,\n      buttonDisabled: !isReadyToSignUp() || code === \"\",\n      disabled: isConfirmed,\n      width: \"calc(100% - 144px)\",\n      buttonLoading: isConfirmCodeInProgress,\n      showConfirmed: isConfirmed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-term-agree-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-term-checkbox-container\",\n        children: /*#__PURE__*/_jsxDEV(CheckBox, {\n          value: isAgreed,\n          onChange: () => setIsAgreed(!isAgreed)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: \"signUp.privacy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpForm, \"57pKJAbevcyws6xnRakLyafBM/A=\", false, function () {\n  return [useAuthContext];\n});\n\n_c = SignUpForm;\n\nconst SignUp = props => {\n  _s2();\n\n  const [isSignUpReady, setIsSignUpReady] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-page-title\",\n      children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: \"signUp.user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignUpForm, {\n      setSubmitReady: setIsSignUpReady\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-footer-container\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Sign Up\",\n        textId: \"button.signUp\",\n        theme: \"primary\",\n        shape: \"round\",\n        isDisabled: !isSignUpReady,\n        onClick: () => props.history.push(\"/landing\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SignUp, \"A9gHXesVJ+aulka2AemS9JrIdd0=\");\n\n_c2 = SignUp;\nexport default SignUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignUpForm\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/pages/SignUp.tsx"],"names":["React","useState","useEffect","UserPool","getUser","toUserPoolAttr","Button","InfoInput","useAuthContext","phoneLocaleList","CheckBox","postUser","FormattedMessage","SignUpForm","props","auth","name","setName","email","setEmail","phone","setPhone","phoneLocale","setPhoneLocale","value","phoneDigit","setPhoneDigit","cachedPhone","setCachedPhone","code","setCode","password","setPassword","rePassword","setRePassword","isConfirmed","setIsConfirmed","isCodeSent","setIsCodeSent","codeRecvInProgress","setCodeRecvInProgress","isConfirmCodeInProgress","setIsConfirmCodeInProgress","isAgreed","setIsAgreed","setSubmitReady","fullPhone","isReadyToSignUp","trim","signUpHandler","trimmedEmail","trimmedPhone","trimmedName","emailAttr","phoneAttr","signUp","err","result","console","log","sub","userSub","resendCodeHandler","congitoUser","resendConfirmationCode","error","confirmCodeHandler","cognitoUser","confirmRegistration","data","authenticate","then","res","catch","finally","e","target","map","obj","icon","SignUp","isSignUpReady","setIsSignUpReady","history","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport UserPool, { getUser, toUserPoolAttr } from \"../aws/UserPool\";\nimport Button from \"../components/Button/Button\";\nimport InfoInput from \"../components/Input/InfoInput\";\nimport { useAuthContext } from \"../auth/auth\";\nimport \"./SignUp.scss\";\nimport { phoneLocaleList } from \"../utils\";\nimport { RouteComponentProps } from \"react-router\";\nimport CheckBox from \"../components/Input/CheckBox\";\nimport { postUser } from \"../api/user\";\nimport { FormattedMessage } from \"react-intl\";\n\ninterface FormProps {\n  setSubmitReady: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport const SignUpForm = (props: FormProps) => {\n  const auth = useAuthContext();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [phoneLocale, setPhoneLocale] = useState(phoneLocaleList[0].value);\n  const [phoneDigit, setPhoneDigit] = useState(\"\");\n  const [cachedPhone, setCachedPhone] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rePassword, setRePassword] = useState(\"\");\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  const [codeRecvInProgress, setCodeRecvInProgress] = useState(false);\n  const [isConfirmCodeInProgress, setIsConfirmCodeInProgress] = useState(false);\n  const [isAgreed, setIsAgreed] = useState(false);\n\n  useEffect(() => {\n    // Decides when submit button should become available\n    if (isConfirmed && isAgreed) {\n      props.setSubmitReady(true);\n    } else {\n      props.setSubmitReady(false);\n    }\n  });\n\n  useEffect(() => {\n    // Determines phone number i.e. username\n    const fullPhone = phoneLocale + phoneDigit;\n    setPhone(fullPhone);\n  }, [phoneLocale, phoneDigit]);\n\n  const isReadyToSignUp = () => {\n    return (\n      name.trim() !== \"\" &&\n      email.trim() !== \"\" &&\n      phone.trim() !== \"\" &&\n      password === rePassword\n    );\n  };\n  const signUpHandler = () => {\n    const trimmedEmail = email.trim();\n    const trimmedPhone = phone.trim();\n    const trimmedName = name.trim();\n    setCodeRecvInProgress(true);\n    const emailAttr = toUserPoolAttr(\"email\", trimmedEmail);\n    const phoneAttr = toUserPoolAttr(\"phone_number\", trimmedPhone);\n    UserPool.signUp(\n      trimmedPhone,\n      password,\n      [emailAttr, phoneAttr],\n      [],\n      async (err, result) => {\n        if (err) {\n          console.log(\"Error\", err);\n        } else {\n          console.log(\"Success\", result);\n          setCachedPhone(trimmedPhone);\n          setPhone(trimmedPhone);\n          setEmail(trimmedEmail);\n          setName(trimmedName);\n          // TODO: show error modal when failed\n          await postUser({\n            sub: result!.userSub,\n            phone: trimmedPhone,\n            email: trimmedEmail,\n            name: trimmedName,\n          });\n          setIsCodeSent(true);\n        }\n        setCodeRecvInProgress(false);\n      },\n    );\n  };\n\n  const resendCodeHandler = () => {\n    setCodeRecvInProgress(true);\n    const congitoUser = getUser(cachedPhone);\n    congitoUser.resendConfirmationCode((err) => {\n      if (err) {\n        console.error(err);\n      } else {\n        setCodeRecvInProgress(false);\n      }\n    });\n  };\n\n  const confirmCodeHandler = () => {\n    setIsConfirmCodeInProgress(true);\n    const cognitoUser = getUser(phone);\n    cognitoUser.confirmRegistration(code, false, (err, data) => {\n      if (err) {\n        console.error(err);\n        setIsConfirmCodeInProgress(false);\n      } else {\n        auth\n          ?.authenticate(phone, password)\n          .then((res) => {\n            console.log(\"Authenticated!\", res);\n            setIsConfirmed(true);\n          })\n          .catch((err) => {\n            console.error(\"Failed to authenticate!\", err);\n          })\n          .finally(() => {\n            setIsConfirmCodeInProgress(false);\n          });\n      }\n    });\n  };\n\n  return (\n    <div className=\"signup-form-container\">\n      <InfoInput\n        title=\"Name\"\n        titleId=\"signUp.name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <InfoInput\n        title=\"Email\"\n        titleId=\"signUp.email\"\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <InfoInput\n        title=\"Password (at least 8 characters)\"\n        titleId=\"signUp.password\"\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <InfoInput\n        title=\"Re-enter password\"\n        titleId=\"signUp.reEnterPassword\"\n        type=\"password\"\n        value={rePassword}\n        onChange={(e) => setRePassword(e.target.value)}\n      />\n      <InfoInput\n        title=\"Phone number\"\n        titleId=\"signUp.phoneNumber\"\n        type=\"tel\"\n        value={phoneDigit}\n        onChange={(e) => setPhoneDigit(e.target.value)}\n        buttonText={\n          isCodeSent && phone === cachedPhone ? \"재전송\" : \"코드 전송\"\n        }\n        buttonTextId={\n          isCodeSent && phone === cachedPhone\n            ? \"button.reSend\"\n            : \"button.sendCode\"\n        }\n        buttonDisabled={!isReadyToSignUp()}\n        onButtonClick={\n          isCodeSent && phone === cachedPhone\n            ? resendCodeHandler\n            : signUpHandler\n        }\n        buttonLoading={codeRecvInProgress}\n        optionVals={phoneLocaleList.map((obj) => obj.value)}\n        optionKeys={phoneLocaleList.map((obj) => obj.icon + \" \" + obj.value)}\n        onSelectChange={(e) => setPhoneLocale(e.target.value)}\n      />\n      {isCodeSent && (\n        <InfoInput\n          title=\"Code\"\n          value={code}\n          onChange={(e) => setCode(e.target.value)}\n          buttonText={isConfirmed ? \"\" : \"확인\"}\n          onButtonClick={confirmCodeHandler}\n          buttonDisabled={!isReadyToSignUp() || code === \"\"}\n          disabled={isConfirmed}\n          width=\"calc(100% - 144px)\"\n          buttonLoading={isConfirmCodeInProgress}\n          showConfirmed={isConfirmed}\n        />\n      )}\n      <div className=\"signup-term-agree-container\">\n        <div className=\"signup-term-checkbox-container\">\n          <CheckBox value={isAgreed} onChange={() => setIsAgreed(!isAgreed)} />\n        </div>\n        <FormattedMessage id=\"signUp.privacy\" />\n      </div>\n    </div>\n  );\n};\n\nconst SignUp = (props: RouteComponentProps) => {\n  const [isSignUpReady, setIsSignUpReady] = useState(false);\n  return (\n    <div className=\"signup-page-container\">\n      <div className=\"signup-page-title\">\n        <FormattedMessage id=\"signUp.user\" />\n      </div>\n      <SignUpForm setSubmitReady={setIsSignUpReady} />\n      <div className=\"signup-footer-container\">\n        <Button\n          text=\"Sign Up\"\n          textId=\"button.signUp\"\n          theme=\"primary\"\n          shape=\"round\"\n          isDisabled={!isSignUpReady}\n          onClick={() => props.history.push(\"/landing\")}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}