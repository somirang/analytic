{"ast":null,"code":"import React from\"react\";import Button from\"../Button/Button\";import checkIcon from\"../../images/check-icon.svg\";import\"./InfoInput.scss\";import{FormattedMessage}from\"react-intl\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InfoInput=function InfoInput(props){return/*#__PURE__*/_jsxs(\"div\",{className:\"info-input-container \".concat(props.title||props.titleId?\"\":\"plain\"),children:[(props.title||props.titleId)&&/*#__PURE__*/_jsx(\"div\",{className:\"info-input-title\",children:props.titleId?/*#__PURE__*/_jsx(FormattedMessage,{id:props.titleId}):props.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-input-content\",children:[props.optionVals&&props.optionKeys&&/*#__PURE__*/_jsx(\"select\",{className:\"info-input-dropdown\",onChange:props.onSelectChange,children:props.optionVals.map(function(opt,ind){return/*#__PURE__*/_jsx(\"option\",{value:opt,children:props.optionKeys[ind]},opt);})}),/*#__PURE__*/_jsx(\"input\",{className:\"info-input\",type:props.type,value:props.value,onChange:props.onChange,placeholder:props.placeholder,disabled:props.disabled,style:{width:props.width}}),props.onButtonClick&&(props.buttonText||props.buttonTextId)&&/*#__PURE__*/_jsx(\"div\",{className:\"info-input-submit-button-container\",children:/*#__PURE__*/_jsx(Button,{text:props.buttonText,textId:props.buttonTextId,theme:\"primary\",shape:\"square\",size:\"small\",isDisabled:props.buttonDisabled,style:{width:\"64px\"},onClick:props.onButtonClick,isLoading:props.buttonLoading})}),props.showConfirmed&&/*#__PURE__*/_jsx(\"div\",{className:\"info-input-green-check-circle\",children:/*#__PURE__*/_jsx(\"img\",{className:\"info-input-green-check\",src:checkIcon,alt:\"check-icon\"})})]})]});};export default InfoInput;","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/components/Input/InfoInput.tsx"],"names":["React","Button","FormattedMessage","InfoInput","props","title","titleId","optionVals","optionKeys","onSelectChange","map","opt","ind","type","value","onChange","placeholder","disabled","width","onButtonClick","buttonText","buttonTextId","buttonDisabled","buttonLoading","showConfirmed","checkIcon"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,C,mDAEA,MAAO,kBAAP,CACA,OAASC,gBAAT,KAAiC,YAAjC,C,wFAsBA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAA2B,CAC3C,mBACE,aACE,SAAS,gCACPA,KAAK,CAACC,KAAN,EAAeD,KAAK,CAACE,OAArB,CAA+B,EAA/B,CAAoC,OAD7B,CADX,WAKG,CAACF,KAAK,CAACC,KAAN,EAAeD,KAAK,CAACE,OAAtB,gBACC,YAAK,SAAS,CAAC,kBAAf,UACGF,KAAK,CAACE,OAAN,cACC,KAAC,gBAAD,EAAkB,EAAE,CAAEF,KAAK,CAACE,OAA5B,EADD,CAGCF,KAAK,CAACC,KAJV,EANJ,cAcE,aAAK,SAAS,CAAC,oBAAf,WACGD,KAAK,CAACG,UAAN,EAAoBH,KAAK,CAACI,UAA1B,eACC,eACE,SAAS,CAAC,qBADZ,CAEE,QAAQ,CAAEJ,KAAK,CAACK,cAFlB,UAIGL,KAAK,CAACG,UAAN,CAAiBG,GAAjB,CAAqB,SAACC,GAAD,CAAMC,GAAN,qBACpB,eAAkB,KAAK,CAAED,GAAzB,UACGP,KAAK,CAACI,UAAN,CAAkBI,GAAlB,CADH,EAAaD,GAAb,CADoB,EAArB,CAJH,EAFJ,cAaE,cACE,SAAS,CAAC,YADZ,CAEE,IAAI,CAAEP,KAAK,CAACS,IAFd,CAGE,KAAK,CAAET,KAAK,CAACU,KAHf,CAIE,QAAQ,CAAEV,KAAK,CAACW,QAJlB,CAKE,WAAW,CAAEX,KAAK,CAACY,WALrB,CAME,QAAQ,CAAEZ,KAAK,CAACa,QANlB,CAOE,KAAK,CAAE,CAAEC,KAAK,CAAEd,KAAK,CAACc,KAAf,CAPT,EAbF,CAsBGd,KAAK,CAACe,aAAN,GAAwBf,KAAK,CAACgB,UAAN,EAAoBhB,KAAK,CAACiB,YAAlD,gBACC,YAAK,SAAS,CAAC,oCAAf,uBACE,KAAC,MAAD,EACE,IAAI,CAAEjB,KAAK,CAACgB,UADd,CAEE,MAAM,CAAEhB,KAAK,CAACiB,YAFhB,CAGE,KAAK,CAAC,SAHR,CAIE,KAAK,CAAC,QAJR,CAKE,IAAI,CAAC,OALP,CAME,UAAU,CAAEjB,KAAK,CAACkB,cANpB,CAOE,KAAK,CAAE,CAAEJ,KAAK,CAAE,MAAT,CAPT,CAQE,OAAO,CAAEd,KAAK,CAACe,aARjB,CASE,SAAS,CAAEf,KAAK,CAACmB,aATnB,EADF,EAvBJ,CAqCGnB,KAAK,CAACoB,aAAN,eACC,YAAK,SAAS,CAAC,+BAAf,uBACE,YACE,SAAS,CAAC,wBADZ,CAEE,GAAG,CAAEC,SAFP,CAGE,GAAG,CAAC,YAHN,EADF,EAtCJ,GAdF,GADF,CAgED,CAjED,CAmEA,cAAetB,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport Button from \"../Button/Button\";\nimport checkIcon from \"../../images/check-icon.svg\";\nimport \"./InfoInput.scss\";\nimport { FormattedMessage } from \"react-intl\";\n\nexport interface InfoInputProps {\n  type?: string;\n  title?: string;\n  titleId?: string;\n  value: string;\n  width?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\n  buttonText?: string;\n  buttonTextId?: string;\n  buttonDisabled?: boolean;\n  onButtonClick?: () => void;\n  buttonLoading?: boolean;\n  showConfirmed?: boolean;\n  optionVals?: string[];\n  optionKeys?: string[];\n  onSelectChange?: React.ChangeEventHandler<HTMLSelectElement>;\n}\n\nconst InfoInput = (props: InfoInputProps) => {\n  return (\n    <div\n      className={`info-input-container ${\n        props.title || props.titleId ? \"\" : \"plain\"\n      }`}\n    >\n      {(props.title || props.titleId) && (\n        <div className=\"info-input-title\">\n          {props.titleId ? (\n            <FormattedMessage id={props.titleId} />\n          ) : (\n            props.title\n          )}\n        </div>\n      )}\n      <div className=\"info-input-content\">\n        {props.optionVals && props.optionKeys && (\n          <select\n            className=\"info-input-dropdown\"\n            onChange={props.onSelectChange}\n          >\n            {props.optionVals.map((opt, ind) => (\n              <option key={opt} value={opt}>\n                {props.optionKeys![ind]}\n              </option>\n            ))}\n          </select>\n        )}\n        <input\n          className=\"info-input\"\n          type={props.type}\n          value={props.value}\n          onChange={props.onChange}\n          placeholder={props.placeholder}\n          disabled={props.disabled}\n          style={{ width: props.width }}\n        />\n        {props.onButtonClick && (props.buttonText || props.buttonTextId) && (\n          <div className=\"info-input-submit-button-container\">\n            <Button\n              text={props.buttonText!}\n              textId={props.buttonTextId}\n              theme=\"primary\"\n              shape=\"square\"\n              size=\"small\"\n              isDisabled={props.buttonDisabled}\n              style={{ width: \"64px\" }}\n              onClick={props.onButtonClick}\n              isLoading={props.buttonLoading}\n            />\n          </div>\n        )}\n        {props.showConfirmed && (\n          <div className=\"info-input-green-check-circle\">\n            <img\n              className=\"info-input-green-check\"\n              src={checkIcon}\n              alt=\"check-icon\"\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default InfoInput;\n"]},"metadata":{},"sourceType":"module"}