{"ast":null,"code":"var _jsxFileName = \"/Users/haesol/Desktop/mediround-user-web-master/src/pages/Hospital/Main.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch, withRouter } from \"react-router\";\nimport { getHospital } from \"../../api/hospital\";\nimport { setHospital } from \"../../store/reducers/hospital\";\nimport Preview from \"./Containers/Preview\";\nimport Request from \"./Containers/Request\";\nimport Schedule from \"./Containers/Schedule\";\nimport Sent from \"./Containers/Sent\";\nimport \"./Main.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThreeTabNavbar = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page-main-navbar-container\",\n    children: props.tabs && props.tabs.map((tab, ind) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-page-main-navbar-item-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `main-page-main-navbar-item ${props.selectedTab === tab.value ? \"selected\" : \"\"}`,\n        onClick: () => props.setSelectedTab(tab.value),\n        children: tab.name\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, ind, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ThreeTabNavbar;\n\nconst Main = props => {\n  _s();\n\n  const [selectedTab, setSelectedTab] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const dispatch = useDispatch();\n  const tabs = {\n    my: [{\n      name: \"Quote Requests\",\n      value: \"request\"\n    }, {\n      name: \"Sent Quotes\",\n      value: \"sent\"\n    }, {\n      name: \"Scheduled Consultations\",\n      value: \"schedule\"\n    }],\n    profile: [{\n      name: \"Account\",\n      value: \"account\"\n    }, {\n      name: \"Hospital Info.\",\n      value: \"info\"\n    }, {\n      name: \"People & Staffs\",\n      value: \"people\"\n    }]\n  };\n  useEffect(() => {\n    let location = props.location.pathname.slice(1);\n    location = location.charAt(location.length - 1) === \"/\" ? location.slice(0, -1) : location;\n    const splitted = location.split(\"/\");\n\n    if (splitted.length >= 3) {\n      setSelectedTab(splitted[2]);\n    } else if (tabs[props.viewType]) {\n      setSelectedTab(tabs[props.viewType][0].value);\n    }\n  }, [props.location]);\n  useEffect(() => {\n    setIsLoading(true);\n\n    const initHospital = async () => {\n      // TODO: get hospital ID\n      const hospitalData = await getHospital({\n        hid: \"h1\"\n      });\n      const hospital = hospitalData.result;\n      dispatch(setHospital(hospital));\n    };\n\n    initHospital().then(() => {\n      setIsLoading(false);\n    }).catch(e => {\n      console.error(\"Main\", e);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const selectTabHandler = tabVal => {\n    setSelectedTab(tabVal);\n    props.history.push(`/hospital/${props.viewType}/${tabVal}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-page-sidebar-container\",\n      children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-page-main-container\",\n      children: [tabs[props.viewType] && /*#__PURE__*/_jsxDEV(ThreeTabNavbar, {\n        tabs: tabs[props.viewType],\n        viewType: props.viewType,\n        selectedTab: selectedTab,\n        setSelectedTab: selectTabHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-page-main-content-container\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/hospital\",\n            component: Request\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/hospital/my\",\n            component: Request\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/hospital/my/request\",\n            component: Request\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/hospital/my/request/:quoteId\",\n            component: Preview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/hospital/my/sent\",\n            component: Sent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/hospital/my/schedule\",\n            component: Schedule\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"3KUlCMQddIVVeXp/IDBLhdip+Fw=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = Main;\nexport default _c3 = withRouter(Main);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ThreeTabNavbar\");\n$RefreshReg$(_c2, \"Main\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/pages/Hospital/Main.tsx"],"names":["React","useEffect","useState","FormattedMessage","useDispatch","Route","Switch","withRouter","getHospital","setHospital","Preview","Request","Schedule","Sent","ThreeTabNavbar","props","tabs","map","tab","ind","selectedTab","value","setSelectedTab","name","Main","isLoading","setIsLoading","dispatch","my","profile","location","pathname","slice","charAt","length","splitted","split","viewType","initHospital","hospitalData","hid","hospital","result","then","catch","e","console","error","selectTabHandler","tabVal","history","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, RouteComponentProps, Switch, withRouter } from \"react-router\";\nimport { getHospital } from \"../../api/hospital\";\nimport { setHospital } from \"../../store/reducers/hospital\";\nimport Preview from \"./Containers/Preview\";\nimport Request from \"./Containers/Request\";\nimport Schedule from \"./Containers/Schedule\";\nimport Sent from \"./Containers/Sent\";\nimport \"./Main.scss\";\n\ninterface ThreeTabNavbarProps {\n  tabs: any[];\n  viewType: string;\n  selectedTab: string;\n  setSelectedTab: (tabVal: string) => void;\n}\n\nconst ThreeTabNavbar = (props: ThreeTabNavbarProps) => {\n  return (\n    <div className=\"main-page-main-navbar-container\">\n      {props.tabs &&\n        props.tabs.map((tab, ind) => (\n          <div className=\"main-page-main-navbar-item-wrapper\" key={ind}>\n            <div\n              className={`main-page-main-navbar-item ${\n                props.selectedTab === tab.value ? \"selected\" : \"\"\n              }`}\n              key={ind}\n              onClick={() => props.setSelectedTab(tab.value)}\n            >\n              {tab.name}\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\ninterface MainProps extends RouteComponentProps {\n  viewType: string;\n}\n\nconst Main = (props: MainProps) => {\n  const [selectedTab, setSelectedTab] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const dispatch = useDispatch();\n\n  const tabs: { [key: string]: any[] } = {\n    my: [\n      { name: \"Quote Requests\", value: \"request\" },\n      { name: \"Sent Quotes\", value: \"sent\" },\n      { name: \"Scheduled Consultations\", value: \"schedule\" },\n    ],\n    profile: [\n      { name: \"Account\", value: \"account\" },\n      { name: \"Hospital Info.\", value: \"info\" },\n      { name: \"People & Staffs\", value: \"people\" },\n    ],\n  };\n\n  useEffect(() => {\n    let location = props.location.pathname.slice(1);\n    location =\n      location.charAt(location.length - 1) === \"/\"\n        ? location.slice(0, -1)\n        : location;\n    const splitted = location.split(\"/\");\n    if (splitted.length >= 3) {\n      setSelectedTab(splitted[2]);\n    } else if (tabs[props.viewType]) {\n      setSelectedTab(tabs[props.viewType][0].value);\n    }\n  }, [props.location]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const initHospital = async () => {\n      // TODO: get hospital ID\n      const hospitalData = await getHospital({ hid: \"h1\" });\n      const hospital = hospitalData.result;\n      dispatch(setHospital(hospital));\n    };\n    initHospital()\n      .then(() => {\n        setIsLoading(false);\n      })\n      .catch((e) => {\n        console.error(\"Main\", e);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const selectTabHandler = (tabVal: string) => {\n    setSelectedTab(tabVal);\n    props.history.push(`/hospital/${props.viewType}/${tabVal}`);\n  };\n\n  return (\n    <div className=\"main-page-container\">\n      <div className=\"main-page-sidebar-container\">\n        <FormattedMessage id=\"hello\" />\n      </div>\n      <div className=\"main-page-main-container\">\n        {tabs[props.viewType] && (\n          <ThreeTabNavbar\n            tabs={tabs[props.viewType]}\n            viewType={props.viewType}\n            selectedTab={selectedTab}\n            setSelectedTab={selectTabHandler}\n          />\n        )}\n        <div className=\"main-page-main-content-container\">\n          <Switch>\n            <Route exact path=\"/hospital\" component={Request} />\n            <Route exact path=\"/hospital/my\" component={Request} />\n            <Route exact path=\"/hospital/my/request\" component={Request} />\n            <Route\n              exact\n              path=\"/hospital/my/request/:quoteId\"\n              component={Preview}\n            />\n            <Route exact path=\"/hospital/my/sent\" component={Sent} />\n            <Route exact path=\"/hospital/my/schedule\" component={Schedule} />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Main);\n"]},"metadata":{},"sourceType":"module"}