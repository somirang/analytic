{"ast":null,"code":"import React from\"react\";import\"./TimeMultipleSelection.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";var TimeSelectionItem=function TimeSelectionItem(props){return/*#__PURE__*/_jsx(\"div\",{className:\"time-multiple-selection-item \".concat(props.isSelected?\"selected\":\"\",\" \").concat(props.disabled?\"disabled\":\"\"),onClick:function onClick(){return props.onClickHandler(props.time);},children:props.time.value});};var TimeMultipleSelection=function TimeMultipleSelection(props){// const [selectedTimeList, setSelectedTimeList] = useState<string[]>([]);\nvar timeList=[{value:\"11:00\",available:true},{value:\"12:00\",available:true},{value:\"14:00\",available:false},{value:\"15:00\",available:true},{value:\"16:00\",available:false},{value:\"17:00\",available:true},{value:\"18:00\",available:true},{value:\"19:00\",available:true}];// const onTimeItemClick = (time: Time) => {\n//   if (time.available) {\n//     setSelectedTimeList((tl) => {\n//       const newTl = [...tl];\n//       const tInd = tl.indexOf(time.value);\n//       if (tInd > -1) {\n//         newTl.splice(tInd, 1);\n//       } else {\n//         newTl.push(time.value);\n//       }\n//       return newTl;\n//     });\n//   }\n// };\nvar onTimeItemClick=function onTimeItemClick(time){if(time.available){props.setTime(time.value);}};return/*#__PURE__*/_jsx(\"div\",{className:\"time-multiple-selection-container\",children:timeList.map(function(time){return/*#__PURE__*/_jsx(TimeSelectionItem,{time:time,isSelected:props.time===time.value,disabled:!time.available,onClickHandler:onTimeItemClick},time.value);})});};export default TimeMultipleSelection;","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web/src/components/Input/TimeMultipleSelection.tsx"],"names":["React","TimeSelectionItem","props","isSelected","disabled","onClickHandler","time","value","TimeMultipleSelection","timeList","available","onTimeItemClick","setTime","map"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,8BAAP,C,2CAcA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAA+B,CACvD,mBACE,YACE,SAAS,wCACPA,KAAK,CAACC,UAAN,CAAmB,UAAnB,CAAgC,EADzB,aAELD,KAAK,CAACE,QAAN,CAAiB,UAAjB,CAA8B,EAFzB,CADX,CAIE,OAAO,CAAE,yBAAMF,CAAAA,KAAK,CAACG,cAAN,CAAqBH,KAAK,CAACI,IAA3B,CAAN,EAJX,UAMGJ,KAAK,CAACI,IAAN,CAAWC,KANd,EADF,CAUD,CAXD,CAkBA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACN,KAAD,CAAsB,CAClD;AACA,GAAMO,CAAAA,QAAQ,CAAG,CACf,CAAEF,KAAK,CAAE,OAAT,CAAkBG,SAAS,CAAE,IAA7B,CADe,CAEf,CAAEH,KAAK,CAAE,OAAT,CAAkBG,SAAS,CAAE,IAA7B,CAFe,CAGf,CAAEH,KAAK,CAAE,OAAT,CAAkBG,SAAS,CAAE,KAA7B,CAHe,CAIf,CAAEH,KAAK,CAAE,OAAT,CAAkBG,SAAS,CAAE,IAA7B,CAJe,CAKf,CAAEH,KAAK,CAAE,OAAT,CAAkBG,SAAS,CAAE,KAA7B,CALe,CAMf,CAAEH,KAAK,CAAE,OAAT,CAAkBG,SAAS,CAAE,IAA7B,CANe,CAOf,CAAEH,KAAK,CAAE,OAAT,CAAkBG,SAAS,CAAE,IAA7B,CAPe,CAQf,CAAEH,KAAK,CAAE,OAAT,CAAkBG,SAAS,CAAE,IAA7B,CARe,CAAjB,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACL,IAAD,CAAgB,CACtC,GAAIA,IAAI,CAACI,SAAT,CAAoB,CAClBR,KAAK,CAACU,OAAN,CAAcN,IAAI,CAACC,KAAnB,EACD,CACF,CAJD,CAMA,mBACE,YAAK,SAAS,CAAC,mCAAf,UACGE,QAAQ,CAACI,GAAT,CAAa,SAACP,IAAD,qBACZ,KAAC,iBAAD,EACE,IAAI,CAAEA,IADR,CAGE,UAAU,CAAEJ,KAAK,CAACI,IAAN,GAAeA,IAAI,CAACC,KAHlC,CAIE,QAAQ,CAAE,CAACD,IAAI,CAACI,SAJlB,CAKE,cAAc,CAAEC,eALlB,EAEOL,IAAI,CAACC,KAFZ,CADY,EAAb,CADH,EADF,CAaD,CA/CD,CAiDA,cAAeC,CAAAA,qBAAf","sourcesContent":["import React from \"react\";\nimport \"./TimeMultipleSelection.scss\";\n\ninterface Time {\n  value: string;\n  available: boolean;\n}\n\ninterface TimeSelectionProps {\n  time: Time;\n  isSelected: boolean;\n  disabled: boolean;\n  onClickHandler: (time: Time) => void;\n}\n\nconst TimeSelectionItem = (props: TimeSelectionProps) => {\n  return (\n    <div\n      className={`time-multiple-selection-item ${\n        props.isSelected ? \"selected\" : \"\"\n      } ${props.disabled ? \"disabled\" : \"\"}`}\n      onClick={() => props.onClickHandler(props.time)}\n    >\n      {props.time.value}\n    </div>\n  );\n};\n\ninterface TimeProps {\n  time: string;\n  setTime: (t: string) => void;\n}\n\nconst TimeMultipleSelection = (props: TimeProps) => {\n  // const [selectedTimeList, setSelectedTimeList] = useState<string[]>([]);\n  const timeList = [\n    { value: \"11:00\", available: true },\n    { value: \"12:00\", available: true },\n    { value: \"14:00\", available: false },\n    { value: \"15:00\", available: true },\n    { value: \"16:00\", available: false },\n    { value: \"17:00\", available: true },\n    { value: \"18:00\", available: true },\n    { value: \"19:00\", available: true },\n  ];\n\n  // const onTimeItemClick = (time: Time) => {\n  //   if (time.available) {\n  //     setSelectedTimeList((tl) => {\n  //       const newTl = [...tl];\n  //       const tInd = tl.indexOf(time.value);\n  //       if (tInd > -1) {\n  //         newTl.splice(tInd, 1);\n  //       } else {\n  //         newTl.push(time.value);\n  //       }\n  //       return newTl;\n  //     });\n  //   }\n  // };\n\n  const onTimeItemClick = (time: Time) => {\n    if (time.available) {\n      props.setTime(time.value);\n    }\n  };\n\n  return (\n    <div className=\"time-multiple-selection-container\">\n      {timeList.map((time) => (\n        <TimeSelectionItem\n          time={time}\n          key={time.value}\n          isSelected={props.time === time.value}\n          disabled={!time.available}\n          onClickHandler={onTimeItemClick}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TimeMultipleSelection;\n"]},"metadata":{},"sourceType":"module"}