{"ast":null,"code":"var _jsxFileName = \"/Users/haesol/Desktop/mediround-user-web-master/src/index.tsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport configureStore from \"./configureStore\";\nimport { createBrowserHistory } from \"history\";\nimport { IntlProvider } from \"react-intl\";\nimport messages_ko from \"./translations/ko.json\";\nimport messages_en from \"./translations/en.json\";\nimport messages_cn from \"./translations/cn.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst history = createBrowserHistory();\nconst initialState = window.initialReduxState;\nconst store = configureStore(initialState, history);\nconst language = navigator.language.split(/[-_]/)[0];\nconst providingLanguage = {\n  en: \"en\",\n  ko: \"ko\",\n  cn: \"cn\",\n  zh: \"cn\"\n};\nconst messages = {\n  ko: messages_ko,\n  en: messages_en,\n  cn: messages_cn,\n  undefined: messages_en\n};\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(IntlProvider, {\n    locale: language in providingLanguage ? language : \"en\",\n    messages: messages[providingLanguage[language]],\n    children: /*#__PURE__*/_jsxDEV(App, {\n      store: store,\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/index.tsx"],"names":["React","ReactDOM","App","reportWebVitals","configureStore","createBrowserHistory","IntlProvider","messages_ko","messages_en","messages_cn","history","initialState","window","initialReduxState","store","language","navigator","split","providingLanguage","en","ko","cn","zh","messages","undefined","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,OAAO,GAAGL,oBAAoB,EAApC;AACA,MAAMM,YAAY,GAAIC,MAAD,CAAgBC,iBAArC;AACA,MAAMC,KAAK,GAAGV,cAAc,CAACO,YAAD,EAAeD,OAAf,CAA5B;AACA,MAAMK,QAAQ,GAAGC,SAAS,CAACD,QAAV,CAAmBE,KAAnB,CAAyB,MAAzB,EAAiC,CAAjC,CAAjB;AAEA,MAAMC,iBAA4C,GAAG;AACnDC,EAAAA,EAAE,EAAE,IAD+C;AAEnDC,EAAAA,EAAE,EAAE,IAF+C;AAGnDC,EAAAA,EAAE,EAAE,IAH+C;AAInDC,EAAAA,EAAE,EAAE;AAJ+C,CAArD;AAOA,MAAMC,QAAgC,GAAG;AACvCH,EAAAA,EAAE,EAAEb,WADmC;AAEvCY,EAAAA,EAAE,EAAEX,WAFmC;AAGvCa,EAAAA,EAAE,EAAEZ,WAHmC;AAIvCe,EAAAA,SAAS,EAAEhB;AAJ4B,CAAzC;AAOAP,QAAQ,CAACwB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,YAAD;AACE,IAAA,MAAM,EAAEV,QAAQ,IAAIG,iBAAZ,GAAgCH,QAAhC,GAA2C,IADrD;AAEE,IAAA,QAAQ,EAAEQ,QAAQ,CAACL,iBAAiB,CAACH,QAAD,CAAlB,CAFpB;AAAA,2BAIE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAED,KAAZ;AAAmB,MAAA,OAAO,EAAEJ;AAA5B;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EASEgB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATF,E,CAYA;AACA;AACA;;AACAxB,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport configureStore from \"./configureStore\";\nimport { createBrowserHistory } from \"history\";\nimport { IntlProvider } from \"react-intl\";\n\nimport messages_ko from \"./translations/ko.json\";\nimport messages_en from \"./translations/en.json\";\nimport messages_cn from \"./translations/cn.json\";\n\nconst history = createBrowserHistory();\nconst initialState = (window as any).initialReduxState;\nconst store = configureStore(initialState, history);\nconst language = navigator.language.split(/[-_]/)[0];\n\nconst providingLanguage: { [key: string]: string } = {\n  en: \"en\",\n  ko: \"ko\",\n  cn: \"cn\",\n  zh: \"cn\",\n};\n\nconst messages: { [key: string]: any } = {\n  ko: messages_ko,\n  en: messages_en,\n  cn: messages_cn,\n  undefined: messages_en,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider\n      locale={language in providingLanguage ? language : \"en\"}\n      messages={messages[providingLanguage[language]]}\n    >\n      <App store={store} history={history} />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}