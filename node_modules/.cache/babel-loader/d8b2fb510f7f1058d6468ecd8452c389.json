{"ast":null,"code":"import _toConsumableArray from\"/Users/haesol/Desktop/mediround-user-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from\"react\";import{withRouter}from\"react-router\";import{getKstDatetime}from\"../../utils\";import Button from\"../Button/Button\";import\"./RequestCard.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var RequestHeader=function RequestHeader(props){return/*#__PURE__*/_jsxs(\"div\",{className:\"request-header-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"request-header-name-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"request-header-name-title\",children:[\"Name: \",/*#__PURE__*/_jsx(\"div\",{className:\"request-header-name-text\",children:props.userName})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"request-header-received-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"request-header-received-title\",children:\"Received\"}),/*#__PURE__*/_jsx(\"div\",{className:\"request-header-received-text\",children:props.receivedTime})]})]});};export var RequestBody=withRouter(function(props){return/*#__PURE__*/_jsxs(\"div\",{className:\"request-body-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"request-body-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"request-body-item-title\",children:\"Interested procedures\"}),/*#__PURE__*/_jsx(\"div\",{className:\"request-body-item-content\",children:props.quote.map(function(item,ind){return/*#__PURE__*/_jsxs(\"div\",{className:\"request-body-item-interested-proc-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"request-body-item-interested-proc-row-title\",children:[\"Category:\",/*#__PURE__*/_jsx(\"div\",{className:\"request-body-item-interested-proc-row-name\",children:item.categoryId})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"request-body-item-interested-proc-row-title\",children:[\"Subcategory(s):\",/*#__PURE__*/_jsx(\"div\",{className:\"request-body-item-interested-proc-row-name\",children:item.subCategoryIds.join(\", \")})]})]},ind);})})]}),props.comment&&/*#__PURE__*/_jsxs(\"div\",{className:\"request-body-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"request-body-item-title\",children:\"Further requests\"}),/*#__PURE__*/_jsx(\"div\",{className:\"request-body-item-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"request-body-item-further-requests\",children:props.comment})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"request-body-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"request-body-item-title\",children:\"Uploaded pictures\"}),/*#__PURE__*/_jsx(\"div\",{className:\"request-body-item-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"request-body-item-uploaded-pictures\",children:_toConsumableArray(new Array(5).keys()).map(function(i){return/*#__PURE__*/_jsx(\"div\",{className:\"request-body-item-uploaded-pictures-img-placeholder\"},i);})})})]}),props.qid&&/*#__PURE__*/_jsx(\"div\",{className:\"request-body-item\",children:/*#__PURE__*/_jsx(\"div\",{className:\"request-body-button-container\",children:/*#__PURE__*/_jsx(Button,{text:\"Make a quote\",theme:\"primary\",shape:\"square\",onClick:function onClick(){return props.history.push(\"/hospital/my/request/\".concat(props.qid));}})})})]});});var RequestCard=function RequestCard(props){var _props$quoteData=props.quoteData,userInfo=_props$quoteData.userInfo,quoteInfo=_props$quoteData.quoteInfo;var userName=userInfo.name;var comment=quoteInfo.comment,quote=quoteInfo.quote,timestamp=quoteInfo.timestamp,qid=quoteInfo.id;return/*#__PURE__*/_jsxs(\"div\",{className:\"request-card-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"request-card-header-container\",children:/*#__PURE__*/_jsx(RequestHeader,{userName:userName,receivedTime:getKstDatetime(timestamp)})}),/*#__PURE__*/_jsx(\"div\",{className:\"request-card-body-container\",children:/*#__PURE__*/_jsx(RequestBody,{quote:quote,comment:comment,qid:qid})})]});};export default RequestCard;","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web/src/components/Card/RequestCard.tsx"],"names":["React","withRouter","getKstDatetime","Button","RequestHeader","props","userName","receivedTime","RequestBody","quote","map","item","ind","categoryId","subCategoryIds","join","comment","Array","keys","i","qid","history","push","RequestCard","quoteData","userInfo","quoteInfo","name","timestamp","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { QuoteDataProps } from \"../../pages/Hospital/Containers/Request\";\nimport { getKstDatetime } from \"../../utils\";\nimport Button from \"../Button/Button\";\nimport \"./RequestCard.scss\";\n\ninterface RequestHeaderProps {\n  userName: string;\n  receivedTime: string;\n}\n\nexport interface QuoteProps {\n  categoryId: string;\n  subCategoryIds: string[];\n}\n\ninterface RequestBodyProps extends RouteComponentProps {\n  quote: QuoteProps[];\n  comment: string;\n  qid?: string;\n}\n\nexport const RequestHeader = (props: RequestHeaderProps) => {\n  return (\n    <div className=\"request-header-container\">\n      <div className=\"request-header-name-container\">\n        <div className=\"request-header-name-title\">\n          Name: <div className=\"request-header-name-text\">{props.userName}</div>\n        </div>\n      </div>\n      <div className=\"request-header-received-container\">\n        <div className=\"request-header-received-title\">Received</div>\n        <div className=\"request-header-received-text\">{props.receivedTime}</div>\n      </div>\n    </div>\n  );\n};\n\nexport const RequestBody = withRouter((props: RequestBodyProps) => {\n  return (\n    <div className=\"request-body-container\">\n      <div className=\"request-body-item\">\n        <div className=\"request-body-item-title\">Interested procedures</div>\n        <div className=\"request-body-item-content\">\n          {props.quote.map((item, ind) => (\n            <div className=\"request-body-item-interested-proc-row\" key={ind}>\n              <div className=\"request-body-item-interested-proc-row-title\">\n                Category:\n                <div className=\"request-body-item-interested-proc-row-name\">\n                  {item.categoryId}\n                </div>\n              </div>\n              <div className=\"request-body-item-interested-proc-row-title\">\n                Subcategory(s):\n                <div className=\"request-body-item-interested-proc-row-name\">\n                  {item.subCategoryIds.join(\", \")}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      {props.comment && (\n        <div className=\"request-body-item\">\n          <div className=\"request-body-item-title\">Further requests</div>\n          <div className=\"request-body-item-content\">\n            <div className=\"request-body-item-further-requests\">\n              {props.comment}\n            </div>\n          </div>\n        </div>\n      )}\n      <div className=\"request-body-item\">\n        <div className=\"request-body-item-title\">Uploaded pictures</div>\n        <div className=\"request-body-item-content\">\n          <div className=\"request-body-item-uploaded-pictures\">\n            {/* TODO: replace with images */}\n            {[...new Array(5).keys()].map((i) => (\n              <div\n                className=\"request-body-item-uploaded-pictures-img-placeholder\"\n                key={i}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n      {props.qid && (\n        <div className=\"request-body-item\">\n          <div className=\"request-body-button-container\">\n            <Button\n              text=\"Make a quote\"\n              theme=\"primary\"\n              shape=\"square\"\n              onClick={() =>\n                props.history.push(`/hospital/my/request/${props.qid}`)\n              }\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport interface RequestCardProps {\n  quoteData: QuoteDataProps;\n}\n\nconst RequestCard = (props: RequestCardProps) => {\n  const { userInfo, quoteInfo } = props.quoteData;\n  const { name: userName } = userInfo;\n  const { comment, quote, timestamp, id: qid } = quoteInfo;\n  return (\n    <div className=\"request-card-container\">\n      <div className=\"request-card-header-container\">\n        <RequestHeader\n          userName={userName}\n          receivedTime={getKstDatetime(timestamp)}\n        />\n      </div>\n      <div className=\"request-card-body-container\">\n        <RequestBody quote={quote} comment={comment} qid={qid} />\n      </div>\n    </div>\n  );\n};\n\nexport default RequestCard;\n"]},"metadata":{},"sourceType":"module"}