{"ast":null,"code":"import _slicedToArray from\"/Users/haesol/Desktop/mediround-user-web-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{FormattedMessage}from\"react-intl\";import\"./CategoryButton.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CategoryButton=function CategoryButton(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isSelected=_useState2[0],setIsSelected=_useState2[1];useEffect(function(){var selected=props.selectedIds.includes(props.id);setIsSelected(selected);},[props.selectedIds,props.id]);return/*#__PURE__*/_jsxs(\"div\",{className:\"category-button-container \".concat(isSelected&&\"selected\"),onClick:props.onClick,children:[/*#__PURE__*/_jsx(\"div\",{className:\"category-button-icon-container\",children:/*#__PURE__*/_jsx(\"img\",{src:props.image,alt:\"category-icon\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"category-button-text\",children:props.textId?/*#__PURE__*/_jsx(FormattedMessage,{id:props.textId}):props.text})]});};export default CategoryButton;","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/components/Button/CategoryButton.tsx"],"names":["React","useState","useEffect","FormattedMessage","CategoryButton","props","isSelected","setIsSelected","selected","selectedIds","includes","id","onClick","image","textId","text"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,gBAAT,KAAiC,YAAjC,CACA,MAAO,uBAAP,C,wFAYA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAkB,eACHJ,QAAQ,CAAC,KAAD,CADL,wCAChCK,UADgC,eACpBC,aADoB,eAGvCL,SAAS,CAAC,UAAM,CACd,GAAMM,CAAAA,QAAQ,CAAGH,KAAK,CAACI,WAAN,CAAmBC,QAAnB,CAA4BL,KAAK,CAACM,EAAlC,CAAjB,CACAJ,aAAa,CAACC,QAAD,CAAb,CACD,CAHQ,CAGN,CAACH,KAAK,CAACI,WAAP,CAAoBJ,KAAK,CAACM,EAA1B,CAHM,CAAT,CAKA,mBACE,aACE,SAAS,qCAA+BL,UAAU,EAAI,UAA7C,CADX,CAEE,OAAO,CAAED,KAAK,CAACO,OAFjB,wBAIE,YAAK,SAAS,CAAC,gCAAf,uBACE,YAAK,GAAG,CAAEP,KAAK,CAACQ,KAAhB,CAAuB,GAAG,CAAC,eAA3B,EADF,EAJF,cAOE,YAAK,SAAS,CAAC,sBAAf,UACGR,KAAK,CAACS,MAAN,cAAe,KAAC,gBAAD,EAAkB,EAAE,CAAET,KAAK,CAACS,MAA5B,EAAf,CAAwDT,KAAK,CAACU,IADjE,EAPF,GADF,CAaD,CArBD,CAuBA,cAAeX,CAAAA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./CategoryButton.scss\";\n\ninterface Props {\n  text: string;\n  textId?: string;\n  id: string;\n  onClick: () => void;\n  selectedIds: string[];\n  selected?: boolean;\n  image: string;\n}\n\nconst CategoryButton = (props: Props) => {\n  const [isSelected, setIsSelected] = useState(false);\n\n  useEffect(() => {\n    const selected = props.selectedIds!.includes(props.id);\n    setIsSelected(selected);\n  }, [props.selectedIds, props.id]);\n\n  return (\n    <div\n      className={`category-button-container ${isSelected && \"selected\"}`}\n      onClick={props.onClick}\n    >\n      <div className=\"category-button-icon-container\">\n        <img src={props.image} alt=\"category-icon\" />\n      </div>\n      <div className=\"category-button-text\">\n        {props.textId ? <FormattedMessage id={props.textId} /> : props.text}\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryButton;\n"]},"metadata":{},"sourceType":"module"}