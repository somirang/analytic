{"ast":null,"code":"import _regeneratorRuntime from\"/Users/haesol/Desktop/mediround-user-web-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"/Users/haesol/Desktop/mediround-user-web-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"/Users/haesol/Desktop/mediround-user-web-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{createContext,useContext}from\"react\";import{CognitoUser,AuthenticationDetails}from\"amazon-cognito-identity-js\";import Pool from\"../aws/UserPool\";import{useDispatch}from\"react-redux\";import{setUser}from\"../store/reducers/user\";import{jsx as _jsx}from\"react/jsx-runtime\";var AuthContext=/*#__PURE__*/createContext(null);var Auth=function Auth(props){var dispatch=useDispatch();var getSession=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var user,userObj;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:user=Pool.getCurrentUser();userObj={};if(!user){_context.next=6;break;}_context.next=5;return user.getSession(function(err,session){if(err){console.log(\"eee\",err);switch(err.name){case\"UserNotFoundException\":dispatch(setUser({}));if(user)user.signOut();return{};default:console.error(\"ERROR\");throw err;}}else{console.log(\"session\",session);var userAttributes={};user.getUserAttributes(function(err,attributes){if(err){switch(err.name){case\"UserNotFoundException\":dispatch(setUser({}));if(user)user.signOut();return{};default:console.error(\"ERROR\");throw err;}}else{if(attributes){var _iterator=_createForOfIteratorHelper(attributes),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var attribute=_step.value;var Name=attribute.Name,Value=attribute.Value;userAttributes[Name]=Value;}}catch(err){_iterator.e(err);}finally{_iterator.f();}}}});userObj=session.getIdToken().payload;dispatch(setUser(userObj));console.log(\"uuu\");// const token = session.getIdToken().getJwtToken();\n// userObj = {\n//   user,\n//   headers: { Authorization: token },\n//   ...session,\n//   ...userAttributes,\n// };\n}});case 5:return _context.abrupt(\"return\",userObj);case 6:case\"end\":return _context.stop();}}},_callee);}));return function getSession(){return _ref.apply(this,arguments);};}();var authenticate=function authenticate(Username,Password){return new Promise(function(resolve,reject){var user=new CognitoUser({Username:Username,Pool:Pool});var authDetails=new AuthenticationDetails({Username:Username,Password:Password});user.authenticateUser(authDetails,{onSuccess:function onSuccess(data){console.log(\"onSuccess:\",data);if(data){dispatch(setUser(data.getIdToken().payload));resolve(data.getIdToken().payload);}},onFailure:function onFailure(err){console.error(\"onFailure:\",err);reject(err);},newPasswordRequired:function newPasswordRequired(data){console.log(\"newPasswordRequired:\",data);resolve(data);}});});};var logout=function logout(){var user=Pool.getCurrentUser();if(user){dispatch(setUser({}));user.signOut();window.open(\"/\",\"_self\");}};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{authenticate:authenticate,getSession:getSession,logout:logout},children:props.children});};export var useAuthContext=function useAuthContext(){return useContext(AuthContext);};export default Auth;","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/auth/auth.tsx"],"names":["React","createContext","useContext","CognitoUser","AuthenticationDetails","Pool","useDispatch","setUser","AuthContext","Auth","props","dispatch","getSession","user","getCurrentUser","userObj","err","session","console","log","name","signOut","error","userAttributes","getUserAttributes","attributes","attribute","Name","Value","getIdToken","payload","authenticate","Username","Password","Promise","resolve","reject","authDetails","authenticateUser","onSuccess","data","onFailure","newPasswordRequired","logout","window","open","children","useAuthContext"],"mappings":"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","sourcesContent":["import React, { createContext, useContext } from \"react\";\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\n\nimport Pool from \"../aws/UserPool\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"../store/reducers/user\";\n\ninterface AuthContextType {\n  authenticate: (Username: string, Password: string) => Promise<any>;\n  getSession: () => any;\n  logout: () => void;\n}\n\nexport interface UserProps {\n  name?: string;\n  sub?: string;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nconst Auth = (props: any) => {\n  const dispatch = useDispatch();\n\n  const getSession = async () => {\n    const user = Pool.getCurrentUser();\n    let userObj = {};\n    if (user) {\n      await user.getSession((err: any, session: any) => {\n        if (err) {\n          console.log(\"eee\", err);\n          switch (err.name) {\n            case \"UserNotFoundException\":\n              dispatch(setUser({}));\n              if (user) user.signOut();\n              return {};\n            default:\n              console.error(\"ERROR\");\n              throw err;\n          }\n        } else {\n          console.log(\"session\", session);\n          const userAttributes: { [id: string]: any } = {};\n          user.getUserAttributes((err, attributes) => {\n            if (err) {\n              switch (err.name) {\n                case \"UserNotFoundException\":\n                  dispatch(setUser({}));\n                  if (user) user.signOut();\n                  return {};\n                default:\n                  console.error(\"ERROR\");\n                  throw err;\n              }\n            } else {\n              if (attributes) {\n                for (let attribute of attributes) {\n                  const { Name, Value } = attribute;\n                  userAttributes[Name] = Value;\n                }\n              }\n            }\n          });\n          userObj = session.getIdToken().payload;\n          dispatch(setUser(userObj));\n          console.log(\"uuu\");\n          // const token = session.getIdToken().getJwtToken();\n          // userObj = {\n          //   user,\n          //   headers: { Authorization: token },\n          //   ...session,\n          //   ...userAttributes,\n          // };\n        }\n      });\n      return userObj;\n    }\n  };\n\n  const authenticate = (Username: string, Password: string) => {\n    return new Promise((resolve, reject) => {\n      const user = new CognitoUser({ Username, Pool });\n      const authDetails = new AuthenticationDetails({ Username, Password });\n\n      user.authenticateUser(authDetails, {\n        onSuccess: (data) => {\n          console.log(\"onSuccess:\", data);\n          if (data) {\n            dispatch(setUser(data.getIdToken().payload));\n            resolve(data.getIdToken().payload);\n          }\n        },\n        onFailure: (err) => {\n          console.error(\"onFailure:\", err);\n          reject(err);\n        },\n        newPasswordRequired: (data) => {\n          console.log(\"newPasswordRequired:\", data);\n          resolve(data);\n        },\n      });\n    });\n  };\n\n  const logout = () => {\n    const user = Pool.getCurrentUser();\n    if (user) {\n      dispatch(setUser({}));\n      user.signOut();\n      window.open(\"/\", \"_self\");\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ authenticate, getSession, logout }}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuthContext = () => useContext(AuthContext);\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}