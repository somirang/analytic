{"ast":null,"code":"var _jsxFileName = \"/Users/haesol/Desktop/mediround-user-web-master/src/components/Modal/Modal.tsx\";\nimport React from \"react\";\nimport Button from \"../Button/Button\";\nimport gray_x_icon from \"../../images/gray-x-icon.svg\";\nimport \"./Modal.scss\";\nimport { FormattedMessage } from \"react-intl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = props => {\n  const onClickOutsideModalHandler = props.closableByClickOutside ? () => props.openController(false) : () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-box-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"modal-exit-icon\",\n        src: gray_x_icon,\n        alt: \"modal-x-icon\",\n        onClick: () => props.openController(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header-container\",\n        children: props.headerId ? /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: props.headerId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this) : props.header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body-container\",\n        children: props.bodyId ? /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: props.bodyId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 27\n        }, this) : props.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), (props.leftButtonProps || props.rightButtonProps) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer-container\",\n        children: [props.leftButtonProps && /*#__PURE__*/_jsxDEV(Button, { ...props.leftButtonProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 39\n        }, this), props.leftButtonProps && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer-gap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 39\n        }, this), props.rightButtonProps && /*#__PURE__*/_jsxDEV(Button, { ...props.rightButtonProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-dimmer\",\n      onClick: onClickOutsideModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/components/Modal/Modal.tsx"],"names":["React","Button","FormattedMessage","Modal","props","onClickOutsideModalHandler","closableByClickOutside","openController","gray_x_icon","headerId","header","bodyId","body","leftButtonProps","rightButtonProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAoC,kBAApC;;AAEA,OAAO,cAAP;AACA,SAASC,gBAAT,QAAiC,YAAjC;;;AAaA,MAAMC,KAAK,GAAIC,KAAD,IAAkB;AAC9B,QAAMC,0BAA0B,GAAGD,KAAK,CAACE,sBAAN,GAC/B,MAAMF,KAAK,CAACG,cAAN,CAAqB,KAArB,CADyB,GAE/B,MAAM,CAAE,CAFZ;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,GAAG,EAAEC,WAFP;AAGE,QAAA,GAAG,EAAC,cAHN;AAIE,QAAA,OAAO,EAAE,MAAMJ,KAAK,CAACG,cAAN,CAAqB,KAArB;AAJjB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,kBACGH,KAAK,CAACK,QAAN,gBACC,QAAC,gBAAD;AAAkB,UAAA,EAAE,EAAEL,KAAK,CAACK;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADD,GAGCL,KAAK,CAACM;AAJV;AAAA;AAAA;AAAA;AAAA,cAPF,eAcE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACGN,KAAK,CAACO,MAAN,gBAAe,QAAC,gBAAD;AAAkB,UAAA,EAAE,EAAEP,KAAK,CAACO;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAAf,GAAwDP,KAAK,CAACQ;AADjE;AAAA;AAAA;AAAA;AAAA,cAdF,EAiBG,CAACR,KAAK,CAACS,eAAN,IAAyBT,KAAK,CAACU,gBAAhC,kBACC;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,mBACGV,KAAK,CAACS,eAAN,iBAAyB,QAAC,MAAD,OAAYT,KAAK,CAACS;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAD5B,EAEGT,KAAK,CAACS,eAAN,iBAAyB;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAF5B,EAGGT,KAAK,CAACU,gBAAN,iBAA0B,QAAC,MAAD,OAAYV,KAAK,CAACU;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAH7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,OAAO,EAAET;AAAvC;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAnCD;;KAAMF,K;AAqCN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport Button, { ButtonProps } from \"../Button/Button\";\nimport gray_x_icon from \"../../images/gray-x-icon.svg\";\nimport \"./Modal.scss\";\nimport { FormattedMessage } from \"react-intl\";\n\ninterface Props {\n  openController: React.Dispatch<React.SetStateAction<boolean>>;\n  header: string;\n  headerId?: string;\n  body: string;\n  bodyId?: string;\n  leftButtonProps?: ButtonProps;\n  rightButtonProps?: ButtonProps;\n  closableByClickOutside?: boolean;\n}\n\nconst Modal = (props: Props) => {\n  const onClickOutsideModalHandler = props.closableByClickOutside\n    ? () => props.openController(false)\n    : () => {};\n\n  return (\n    <div className=\"modal-container\">\n      <div className=\"modal-box-container\">\n        <img\n          className=\"modal-exit-icon\"\n          src={gray_x_icon}\n          alt=\"modal-x-icon\"\n          onClick={() => props.openController(false)}\n        />\n        <div className=\"modal-header-container\">\n          {props.headerId ? (\n            <FormattedMessage id={props.headerId} />\n          ) : (\n            props.header\n          )}\n        </div>\n        <div className=\"modal-body-container\">\n          {props.bodyId ? <FormattedMessage id={props.bodyId} /> : props.body}\n        </div>\n        {(props.leftButtonProps || props.rightButtonProps) && (\n          <div className=\"modal-footer-container\">\n            {props.leftButtonProps && <Button {...props.leftButtonProps} />}\n            {props.leftButtonProps && <div className=\"modal-footer-gap\"></div>}\n            {props.rightButtonProps && <Button {...props.rightButtonProps} />}\n          </div>\n        )}\n      </div>\n      <div className=\"modal-dimmer\" onClick={onClickOutsideModalHandler} />\n    </div>\n  );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}