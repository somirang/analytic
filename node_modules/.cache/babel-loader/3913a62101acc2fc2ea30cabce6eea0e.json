{"ast":null,"code":"var _jsxFileName = \"/Users/haesol/Desktop/mediround-user-web-master/src/components/Input/InfoInput.tsx\";\nimport React from \"react\";\nimport Button from \"../Button/Button\";\nimport checkIcon from \"../../images/check-icon.svg\";\nimport \"./InfoInput.scss\";\nimport { FormattedMessage } from \"react-intl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoInput = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `info-input-container ${props.title || props.titleId ? \"\" : \"plain\"}`,\n    children: [(props.title || props.titleId) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-input-title\",\n      children: props.titleId ? /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: props.titleId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this) : props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-input-content\",\n      children: [props.optionVals && props.optionKeys && /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"info-input-dropdown\",\n        onChange: props.onSelectChange,\n        children: props.optionVals.map((opt, ind) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: opt,\n          children: props.optionKeys[ind]\n        }, opt, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"info-input\",\n        type: props.type,\n        value: props.value,\n        onChange: props.onChange,\n        placeholder: props.placeholder,\n        disabled: props.disabled,\n        style: {\n          width: props.width\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), props.onButtonClick && (props.buttonText || props.buttonTextId) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-input-submit-button-container\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          text: props.buttonText,\n          textId: props.buttonTextId,\n          theme: \"primary\",\n          shape: \"square\",\n          size: \"small\",\n          isDisabled: props.buttonDisabled,\n          style: {\n            width: \"64px\"\n          },\n          onClick: props.onButtonClick,\n          isLoading: props.buttonLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), props.showConfirmed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-input-green-check-circle\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"info-input-green-check\",\n          src: checkIcon,\n          alt: \"check-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = InfoInput;\nexport default InfoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoInput\");","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/components/Input/InfoInput.tsx"],"names":["React","Button","FormattedMessage","InfoInput","props","title","titleId","optionVals","optionKeys","onSelectChange","map","opt","ind","type","value","onChange","placeholder","disabled","width","onButtonClick","buttonText","buttonTextId","buttonDisabled","buttonLoading","showConfirmed","checkIcon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,OAAO,kBAAP;AACA,SAASC,gBAAT,QAAiC,YAAjC;;;AAsBA,MAAMC,SAAS,GAAIC,KAAD,IAA2B;AAC3C,sBACE;AACE,IAAA,SAAS,EAAG,wBACVA,KAAK,CAACC,KAAN,IAAeD,KAAK,CAACE,OAArB,GAA+B,EAA/B,GAAoC,OACrC,EAHH;AAAA,eAKG,CAACF,KAAK,CAACC,KAAN,IAAeD,KAAK,CAACE,OAAtB,kBACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACGF,KAAK,CAACE,OAAN,gBACC,QAAC,gBAAD;AAAkB,QAAA,EAAE,EAAEF,KAAK,CAACE;AAA5B;AAAA;AAAA;AAAA;AAAA,cADD,GAGCF,KAAK,CAACC;AAJV;AAAA;AAAA;AAAA;AAAA,YANJ,eAcE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,iBACGD,KAAK,CAACG,UAAN,IAAoBH,KAAK,CAACI,UAA1B,iBACC;AACE,QAAA,SAAS,EAAC,qBADZ;AAEE,QAAA,QAAQ,EAAEJ,KAAK,CAACK,cAFlB;AAAA,kBAIGL,KAAK,CAACG,UAAN,CAAiBG,GAAjB,CAAqB,CAACC,GAAD,EAAMC,GAAN,kBACpB;AAAkB,UAAA,KAAK,EAAED,GAAzB;AAAA,oBACGP,KAAK,CAACI,UAAN,CAAkBI,GAAlB;AADH,WAAaD,GAAb;AAAA;AAAA;AAAA;AAAA,gBADD;AAJH;AAAA;AAAA;AAAA;AAAA,cAFJ,eAaE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,IAAI,EAAEP,KAAK,CAACS,IAFd;AAGE,QAAA,KAAK,EAAET,KAAK,CAACU,KAHf;AAIE,QAAA,QAAQ,EAAEV,KAAK,CAACW,QAJlB;AAKE,QAAA,WAAW,EAAEX,KAAK,CAACY,WALrB;AAME,QAAA,QAAQ,EAAEZ,KAAK,CAACa,QANlB;AAOE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAEd,KAAK,CAACc;AAAf;AAPT;AAAA;AAAA;AAAA;AAAA,cAbF,EAsBGd,KAAK,CAACe,aAAN,KAAwBf,KAAK,CAACgB,UAAN,IAAoBhB,KAAK,CAACiB,YAAlD,kBACC;AAAK,QAAA,SAAS,EAAC,oCAAf;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAEjB,KAAK,CAACgB,UADd;AAEE,UAAA,MAAM,EAAEhB,KAAK,CAACiB,YAFhB;AAGE,UAAA,KAAK,EAAC,SAHR;AAIE,UAAA,KAAK,EAAC,QAJR;AAKE,UAAA,IAAI,EAAC,OALP;AAME,UAAA,UAAU,EAAEjB,KAAK,CAACkB,cANpB;AAOE,UAAA,KAAK,EAAE;AAAEJ,YAAAA,KAAK,EAAE;AAAT,WAPT;AAQE,UAAA,OAAO,EAAEd,KAAK,CAACe,aARjB;AASE,UAAA,SAAS,EAAEf,KAAK,CAACmB;AATnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAvBJ,EAqCGnB,KAAK,CAACoB,aAAN,iBACC;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,wBADZ;AAEE,UAAA,GAAG,EAAEC,SAFP;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgED,CAjED;;KAAMtB,S;AAmEN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport Button from \"../Button/Button\";\nimport checkIcon from \"../../images/check-icon.svg\";\nimport \"./InfoInput.scss\";\nimport { FormattedMessage } from \"react-intl\";\n\nexport interface InfoInputProps {\n  type?: string;\n  title?: string;\n  titleId?: string;\n  value: string;\n  width?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\n  buttonText?: string;\n  buttonTextId?: string;\n  buttonDisabled?: boolean;\n  onButtonClick?: () => void;\n  buttonLoading?: boolean;\n  showConfirmed?: boolean;\n  optionVals?: string[];\n  optionKeys?: string[];\n  onSelectChange?: React.ChangeEventHandler<HTMLSelectElement>;\n}\n\nconst InfoInput = (props: InfoInputProps) => {\n  return (\n    <div\n      className={`info-input-container ${\n        props.title || props.titleId ? \"\" : \"plain\"\n      }`}\n    >\n      {(props.title || props.titleId) && (\n        <div className=\"info-input-title\">\n          {props.titleId ? (\n            <FormattedMessage id={props.titleId} />\n          ) : (\n            props.title\n          )}\n        </div>\n      )}\n      <div className=\"info-input-content\">\n        {props.optionVals && props.optionKeys && (\n          <select\n            className=\"info-input-dropdown\"\n            onChange={props.onSelectChange}\n          >\n            {props.optionVals.map((opt, ind) => (\n              <option key={opt} value={opt}>\n                {props.optionKeys![ind]}\n              </option>\n            ))}\n          </select>\n        )}\n        <input\n          className=\"info-input\"\n          type={props.type}\n          value={props.value}\n          onChange={props.onChange}\n          placeholder={props.placeholder}\n          disabled={props.disabled}\n          style={{ width: props.width }}\n        />\n        {props.onButtonClick && (props.buttonText || props.buttonTextId) && (\n          <div className=\"info-input-submit-button-container\">\n            <Button\n              text={props.buttonText!}\n              textId={props.buttonTextId}\n              theme=\"primary\"\n              shape=\"square\"\n              size=\"small\"\n              isDisabled={props.buttonDisabled}\n              style={{ width: \"64px\" }}\n              onClick={props.onButtonClick}\n              isLoading={props.buttonLoading}\n            />\n          </div>\n        )}\n        {props.showConfirmed && (\n          <div className=\"info-input-green-check-circle\">\n            <img\n              className=\"info-input-green-check\"\n              src={checkIcon}\n              alt=\"check-icon\"\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default InfoInput;\n"]},"metadata":{},"sourceType":"module"}