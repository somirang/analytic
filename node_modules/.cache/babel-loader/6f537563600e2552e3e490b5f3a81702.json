{"ast":null,"code":"import { connectRouter } from \"connected-react-router\";\nimport { combineReducers } from \"redux\";\nimport reducers from \"./reducers\";\nexport const createRootReducer = history => combineReducers({\n  router: connectRouter(history),\n  ...reducers\n});","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/store/index.ts"],"names":["connectRouter","combineReducers","reducers","createRootReducer","history","router"],"mappings":"AAAA,SAASA,aAAT,QAA2C,wBAA3C;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAOA,OAAO,MAAMC,iBAAiB,GAAIC,OAAD,IAC/BH,eAAe,CAAC;AACdI,EAAAA,MAAM,EAAEL,aAAa,CAACI,OAAD,CADP;AAEd,KAAGF;AAFW,CAAD,CADV","sourcesContent":["import { connectRouter, RouterState } from \"connected-react-router\";\nimport { combineReducers } from \"redux\";\nimport reducers from \"./reducers\";\nimport { History } from \"history\";\n\nexport interface ApplicationState {\n  router: RouterState;\n}\n\nexport const createRootReducer = (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    ...reducers,\n  });\n\nexport type RootState = ReturnType<ReturnType<typeof createRootReducer>>;\n"]},"metadata":{},"sourceType":"module"}