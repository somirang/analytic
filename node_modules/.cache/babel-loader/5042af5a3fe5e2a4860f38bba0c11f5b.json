{"ast":null,"code":"import React from\"react\";import ReactDOM from\"react-dom\";import\"./index.css\";import App from\"./App\";import reportWebVitals from\"./reportWebVitals\";import configureStore from\"./configureStore\";import{createBrowserHistory}from\"history\";import{IntlProvider}from\"react-intl\";import messages_ko from\"./translations/ko.json\";import messages_en from\"./translations/en.json\";import messages_cn from\"./translations/cn.json\";import{jsx as _jsx}from\"react/jsx-runtime\";var history=createBrowserHistory();var initialState=window.initialReduxState;var store=configureStore(initialState,history);var language=navigator.language.split(/[-_]/)[0];var providingLanguage={en:\"en\",ko:\"ko\",cn:\"cn\",zh:\"cn\"};var messages={ko:messages_ko,en:messages_en,cn:messages_cn,undefined:messages_en};ReactDOM.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(IntlProvider,{locale:language in providingLanguage?language:\"en\",messages:messages[providingLanguage[language]],children:/*#__PURE__*/_jsx(App,{store:store,history:history})})}),document.getElementById(\"root\"));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/index.tsx"],"names":["React","ReactDOM","App","reportWebVitals","configureStore","createBrowserHistory","IntlProvider","messages_ko","messages_en","messages_cn","history","initialState","window","initialReduxState","store","language","navigator","split","providingLanguage","en","ko","cn","zh","messages","undefined","render","document","getElementById"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,OAASC,oBAAT,KAAqC,SAArC,CACA,OAASC,YAAT,KAA6B,YAA7B,CAEA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,C,2CAEA,GAAMC,CAAAA,OAAO,CAAGL,oBAAoB,EAApC,CACA,GAAMM,CAAAA,YAAY,CAAIC,MAAD,CAAgBC,iBAArC,CACA,GAAMC,CAAAA,KAAK,CAAGV,cAAc,CAACO,YAAD,CAAeD,OAAf,CAA5B,CACA,GAAMK,CAAAA,QAAQ,CAAGC,SAAS,CAACD,QAAV,CAAmBE,KAAnB,CAAyB,MAAzB,EAAiC,CAAjC,CAAjB,CAEA,GAAMC,CAAAA,iBAA4C,CAAG,CACnDC,EAAE,CAAE,IAD+C,CAEnDC,EAAE,CAAE,IAF+C,CAGnDC,EAAE,CAAE,IAH+C,CAInDC,EAAE,CAAE,IAJ+C,CAArD,CAOA,GAAMC,CAAAA,QAAgC,CAAG,CACvCH,EAAE,CAAEb,WADmC,CAEvCY,EAAE,CAAEX,WAFmC,CAGvCa,EAAE,CAAEZ,WAHmC,CAIvCe,SAAS,CAAEhB,WAJ4B,CAAzC,CAOAP,QAAQ,CAACwB,MAAT,cACE,KAAC,KAAD,CAAO,UAAP,wBACE,KAAC,YAAD,EACE,MAAM,CAAEV,QAAQ,GAAIG,CAAAA,iBAAZ,CAAgCH,QAAhC,CAA2C,IADrD,CAEE,QAAQ,CAAEQ,QAAQ,CAACL,iBAAiB,CAACH,QAAD,CAAlB,CAFpB,uBAIE,KAAC,GAAD,EAAK,KAAK,CAAED,KAAZ,CAAmB,OAAO,CAAEJ,OAA5B,EAJF,EADF,EADF,CASEgB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATF,EAYA;AACA;AACA;AACAxB,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport configureStore from \"./configureStore\";\nimport { createBrowserHistory } from \"history\";\nimport { IntlProvider } from \"react-intl\";\n\nimport messages_ko from \"./translations/ko.json\";\nimport messages_en from \"./translations/en.json\";\nimport messages_cn from \"./translations/cn.json\";\n\nconst history = createBrowserHistory();\nconst initialState = (window as any).initialReduxState;\nconst store = configureStore(initialState, history);\nconst language = navigator.language.split(/[-_]/)[0];\n\nconst providingLanguage: { [key: string]: string } = {\n  en: \"en\",\n  ko: \"ko\",\n  cn: \"cn\",\n  zh: \"cn\",\n};\n\nconst messages: { [key: string]: any } = {\n  ko: messages_ko,\n  en: messages_en,\n  cn: messages_cn,\n  undefined: messages_en,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider\n      locale={language in providingLanguage ? language : \"en\"}\n      messages={messages[providingLanguage[language]]}\n    >\n      <App store={store} history={history} />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}