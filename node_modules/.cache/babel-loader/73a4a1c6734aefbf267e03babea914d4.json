{"ast":null,"code":"import React from\"react\";import{FormattedMessage}from\"react-intl\";import\"./Button.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";var Button=function Button(props){return/*#__PURE__*/_jsx(\"div\",{className:\"button-container \".concat(props.isDisabled?\"disabled\":props.theme,\" \").concat(props.shape,\" \").concat(props.size?props.size:\"\"),onClick:props.isDisabled||props.isLoading?function(){}:props.onClick,style:props.style?props.style:null,children:props.isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"button-spinner \".concat(props.size?props.size:\"\",\" \").concat(props.theme?props.theme:\"\")}):props.textId?/*#__PURE__*/_jsx(FormattedMessage,{id:props.textId}):props.text});};export default Button;","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/components/Button/Button.tsx"],"names":["React","FormattedMessage","Button","props","isDisabled","theme","shape","size","isLoading","onClick","style","textId","text"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,KAAiC,YAAjC,CACA,MAAO,eAAP,C,2CAcA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAwB,CACrC,mBACE,YACE,SAAS,4BACPA,KAAK,CAACC,UAAN,CAAmB,UAAnB,CAAgCD,KAAK,CAACE,KAD/B,aAELF,KAAK,CAACG,KAFD,aAEUH,KAAK,CAACI,IAAN,CAAaJ,KAAK,CAACI,IAAnB,CAA0B,EAFpC,CADX,CAIE,OAAO,CAAEJ,KAAK,CAACC,UAAN,EAAoBD,KAAK,CAACK,SAA1B,CAAsC,UAAM,CAAE,CAA9C,CAAiDL,KAAK,CAACM,OAJlE,CAKE,KAAK,CAAEN,KAAK,CAACO,KAAN,CAAcP,KAAK,CAACO,KAApB,CAA4B,IALrC,UAOGP,KAAK,CAACK,SAAN,cACC,YACE,SAAS,0BAAoBL,KAAK,CAACI,IAAN,CAAaJ,KAAK,CAACI,IAAnB,CAA0B,EAA9C,aACPJ,KAAK,CAACE,KAAN,CAAcF,KAAK,CAACE,KAApB,CAA4B,EADrB,CADX,EADD,CAMGF,KAAK,CAACQ,MAAN,cACF,KAAC,gBAAD,EAAkB,EAAE,CAAER,KAAK,CAACQ,MAA5B,EADE,CAGFR,KAAK,CAACS,IAhBV,EADF,CAqBD,CAtBD,CAwBA,cAAeV,CAAAA,MAAf","sourcesContent":["import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./Button.scss\";\n\nexport interface ButtonProps {\n  text: string;\n  textId?: string;\n  theme: string;\n  shape: string;\n  size?: string;\n  onClick?: () => void;\n  style?: any;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst Button = (props: ButtonProps) => {\n  return (\n    <div\n      className={`button-container ${\n        props.isDisabled ? \"disabled\" : props.theme\n      } ${props.shape} ${props.size ? props.size : \"\"}`}\n      onClick={props.isDisabled || props.isLoading ? () => {} : props.onClick}\n      style={props.style ? props.style : null}\n    >\n      {props.isLoading ? (\n        <div\n          className={`button-spinner ${props.size ? props.size : \"\"} ${\n            props.theme ? props.theme : \"\"\n          }`}\n        />\n      ) : props.textId ? (\n        <FormattedMessage id={props.textId} />\n      ) : (\n        props.text\n      )}\n    </div>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}