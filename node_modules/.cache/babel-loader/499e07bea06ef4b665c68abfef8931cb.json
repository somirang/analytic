{"ast":null,"code":"var _jsxFileName = \"/Users/haesol/Desktop/mediround-user-web-master/src/routes.tsx\";\nimport React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { SignUpPage, LandingPage, NotFoundPage, FormPage, MyPage, SignInPage, ForgotPasswdPage } from \"./pages/User\";\nimport { HospitalSignInPage, HospitalMyPage, HospitalProfilePage, HospitalSchedulePage } from \"./pages/Hospital\";\nimport QuoteDetailWrapper from \"./pages/My/QuoteDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  isAuthenticated,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/signin?next=${window.location.pathname}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProtectedRoute;\n\nconst HospitalRoutes = props => {\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: props.match.path,\n      component: HospitalMyPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${props.match.path}/signin`,\n      component: HospitalSignInPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${props.match.path}/my`,\n      component: HospitalMyPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${props.match.path}/profile`,\n      component: HospitalProfilePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${props.match.path}/schedule`,\n      component: HospitalSchedulePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = HospitalRoutes;\n\nconst Routes = props => {\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/landing\",\n      component: LandingPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: SignUpPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/signin\",\n      component: SignInPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/forgotPasswd\",\n      component: ForgotPasswdPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/form\",\n      component: FormPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      component: props.isAuthenticated ? MyPage : LandingPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      path: \"/mypage\",\n      isAuthenticated: props.isAuthenticated,\n      component: MyPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      path: \"/quote/:quoteId\",\n      isAuthenticated: props.isAuthenticated,\n      component: QuoteDetailWrapper\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/hospital\",\n      component: HospitalRoutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      component: NotFoundPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Routes;\nexport default Routes;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"HospitalRoutes\");\n$RefreshReg$(_c3, \"Routes\");","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/routes.tsx"],"names":["React","Redirect","Route","Switch","SignUpPage","LandingPage","NotFoundPage","FormPage","MyPage","SignInPage","ForgotPasswdPage","HospitalSignInPage","HospitalMyPage","HospitalProfilePage","HospitalSchedulePage","QuoteDetailWrapper","ProtectedRoute","component","Component","isAuthenticated","rest","props","window","location","pathname","HospitalRoutes","match","path","Routes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Redirect, Route, RouteComponentProps, Switch } from \"react-router-dom\";\nimport {\n  SignUpPage,\n  MainPage,\n  LandingPage,\n  NotFoundPage,\n  FormPage,\n  MyPage,\n  SignInPage,\n  ForgotPasswdPage,\n} from \"./pages/User\";\nimport {\n  HospitalSignInPage,\n  HospitalMyPage,\n  HospitalProfilePage,\n  HospitalSchedulePage,\n} from \"./pages/Hospital\";\nimport QuoteDetailWrapper from \"./pages/My/QuoteDetail\";\n\ninterface ProtectedRouteProps {\n  component: React.FC<RouteComponentProps>;\n  isAuthenticated: boolean;\n  exact?: boolean;\n  path: string;\n}\n\nconst ProtectedRoute = ({\n  component: Component,\n  isAuthenticated,\n  ...rest\n}: ProtectedRouteProps) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={`/signin?next=${window.location.pathname}`} />\n        )\n      }\n    />\n  );\n};\n\ninterface RouteProps {\n  isAuthenticated: boolean;\n}\n\nconst HospitalRoutes = (props: RouteComponentProps) => {\n  return (\n    <Switch>\n      <Route exact path={props.match.path} component={HospitalMyPage} />\n      <Route\n        path={`${props.match.path}/signin`}\n        component={HospitalSignInPage}\n      />\n      <Route path={`${props.match.path}/my`} component={HospitalMyPage} />\n      <Route\n        path={`${props.match.path}/profile`}\n        component={HospitalProfilePage}\n      />\n      <Route\n        path={`${props.match.path}/schedule`}\n        component={HospitalSchedulePage}\n      />\n    </Switch>\n  );\n};\n\nconst Routes = (props: RouteProps) => {\n  return (\n    <Switch>\n      <Route exact path=\"/landing\" component={LandingPage} />\n      <Route exact path=\"/signup\" component={SignUpPage} />\n      <Route exact path=\"/signin\" component={SignInPage} />\n      <Route exact path=\"/forgotPasswd\" component={ForgotPasswdPage} />\n      <Route exact path=\"/form\" component={FormPage} />\n      <Route\n        exact\n        path=\"/\"\n        component={props.isAuthenticated ? MyPage : LandingPage}\n      />\n      <ProtectedRoute\n        path=\"/mypage\"\n        isAuthenticated={props.isAuthenticated}\n        component={MyPage}\n      />\n      {/* TODO: user authentication to corresponding quote */}\n      <ProtectedRoute\n        path=\"/quote/:quoteId\"\n        isAuthenticated={props.isAuthenticated}\n        component={QuoteDetailWrapper}\n      />\n      <Route path=\"/hospital\" component={HospitalRoutes} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}