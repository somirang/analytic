{"ast":null,"code":"var _jsxFileName = \"/Users/haesol/Desktop/mediround-user-web-master/src/components/Button/CategoryButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./CategoryButton.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoryButton = props => {\n  _s();\n\n  const [isSelected, setIsSelected] = useState(false);\n  useEffect(() => {\n    const selected = props.selectedIds.includes(props.id);\n    setIsSelected(selected);\n  }, [props.selectedIds, props.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `category-button-container ${isSelected && \"selected\"}`,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-button-icon-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.image,\n        alt: \"category-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-button-text\",\n      children: props.textId ? /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: props.textId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this) : props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoryButton, \"CacRf9f2+4Wx6hl/Ob/6GklkgIs=\");\n\n_c = CategoryButton;\nexport default CategoryButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryButton\");","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/components/Button/CategoryButton.tsx"],"names":["React","useState","useEffect","FormattedMessage","CategoryButton","props","isSelected","setIsSelected","selected","selectedIds","includes","id","onClick","image","textId","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAO,uBAAP;;;AAYA,MAAMC,cAAc,GAAIC,KAAD,IAAkB;AAAA;;AACvC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,QAAQ,GAAGH,KAAK,CAACI,WAAN,CAAmBC,QAAnB,CAA4BL,KAAK,CAACM,EAAlC,CAAjB;AACAJ,IAAAA,aAAa,CAACC,QAAD,CAAb;AACD,GAHQ,EAGN,CAACH,KAAK,CAACI,WAAP,EAAoBJ,KAAK,CAACM,EAA1B,CAHM,CAAT;AAKA,sBACE;AACE,IAAA,SAAS,EAAG,6BAA4BL,UAAU,IAAI,UAAW,EADnE;AAEE,IAAA,OAAO,EAAED,KAAK,CAACO,OAFjB;AAAA,4BAIE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEP,KAAK,CAACQ,KAAhB;AAAuB,QAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBACGR,KAAK,CAACS,MAAN,gBAAe,QAAC,gBAAD;AAAkB,QAAA,EAAE,EAAET,KAAK,CAACS;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAf,GAAwDT,KAAK,CAACU;AADjE;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArBD;;GAAMX,c;;KAAAA,c;AAuBN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./CategoryButton.scss\";\n\ninterface Props {\n  text: string;\n  textId?: string;\n  id: string;\n  onClick: () => void;\n  selectedIds: string[];\n  selected?: boolean;\n  image: string;\n}\n\nconst CategoryButton = (props: Props) => {\n  const [isSelected, setIsSelected] = useState(false);\n\n  useEffect(() => {\n    const selected = props.selectedIds!.includes(props.id);\n    setIsSelected(selected);\n  }, [props.selectedIds, props.id]);\n\n  return (\n    <div\n      className={`category-button-container ${isSelected && \"selected\"}`}\n      onClick={props.onClick}\n    >\n      <div className=\"category-button-icon-container\">\n        <img src={props.image} alt=\"category-icon\" />\n      </div>\n      <div className=\"category-button-text\">\n        {props.textId ? <FormattedMessage id={props.textId} /> : props.text}\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryButton;\n"]},"metadata":{},"sourceType":"module"}