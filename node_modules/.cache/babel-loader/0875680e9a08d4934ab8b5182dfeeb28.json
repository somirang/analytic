{"ast":null,"code":"var _jsxFileName = \"/Users/haesol/Desktop/mediround-user-web-master/src/components/Dimmer/Dimmer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dimmer.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dimmer(props) {\n  _s();\n\n  const [zIndex, setzIndex] = useState(-1);\n  useEffect(() => {\n    if (!props.on) {\n      setTimeout(() => {\n        setzIndex(-1);\n      }, 350);\n    } else {\n      setzIndex(100);\n    }\n  }, [props.on]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dimmer-container ${props.on && \"on\"}`,\n    style: {\n      zIndex\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dimmer, \"xyNTF0KV8kkglkCxwxQKZNy2QcU=\");\n\n_c = Dimmer;\nexport default Dimmer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dimmer\");","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/components/Dimmer/Dimmer.tsx"],"names":["React","useState","useEffect","Dimmer","props","zIndex","setzIndex","on","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,eAAP;;;AAMA,SAASC,MAAT,CAAgBC,KAAhB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,CAAC,CAAF,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACE,KAAK,CAACG,EAAX,EAAe;AACbC,MAAAA,UAAU,CAAC,MAAM;AACfF,QAAAA,SAAS,CAAC,CAAC,CAAF,CAAT;AACD,OAFS,EAEP,GAFO,CAAV;AAGD,KAJD,MAIO;AACLA,MAAAA,SAAS,CAAC,GAAD,CAAT;AACD;AACF,GARQ,EAQN,CAACF,KAAK,CAACG,EAAP,CARM,CAAT;AASA,sBACE;AACE,IAAA,SAAS,EAAG,oBAAmBH,KAAK,CAACG,EAAN,IAAY,IAAK,EADlD;AAEE,IAAA,KAAK,EAAE;AAAEF,MAAAA;AAAF;AAFT;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAlBQF,M;;KAAAA,M;AAoBT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Dimmer.scss\";\n\ninterface Props {\n  on: Boolean;\n}\n\nfunction Dimmer(props: Props) {\n  const [zIndex, setzIndex] = useState(-1);\n\n  useEffect(() => {\n    if (!props.on) {\n      setTimeout(() => {\n        setzIndex(-1);\n      }, 350);\n    } else {\n      setzIndex(100);\n    }\n  }, [props.on]);\n  return (\n    <div\n      className={`dimmer-container ${props.on && \"on\"}`}\n      style={{ zIndex }}\n    />\n  );\n}\n\nexport default Dimmer;\n"]},"metadata":{},"sourceType":"module"}