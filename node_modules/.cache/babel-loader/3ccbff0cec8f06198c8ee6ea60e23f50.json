{"ast":null,"code":"var _jsxFileName = \"/Users/haesol/Desktop/mediround-user-web-master/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Provider, useSelector } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport \"./App.css\";\nimport \"./App.scss\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Routes from \"./routes\";\nimport Auth, { useAuthContext } from \"./auth/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoutesAuthWrapper = () => {\n  _s();\n\n  const auth = useAuthContext();\n  const [isLoading, setIsLoading] = useState(true);\n  const currentUser = useSelector(state => state.user.current);\n  const [user, setUser] = useState({});\n\n  const getPageType = () => {\n    const firstLoc = window.location.pathname.split(\"/\")[1];\n    return firstLoc === \"hospital\" ? \"hospital\" : \"user\";\n  };\n\n  useEffect(() => {\n    if (isLoading || user === {}) {\n      try {\n        auth === null || auth === void 0 ? void 0 : auth.getSession().then(currUser => {\n          setUser(currUser);\n        });\n      } catch (err) {\n        console.error(err);\n      }\n\n      setIsLoading(false);\n    }\n  }, [auth, user, isLoading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-content\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: `App-header ${getPageType()}-page`,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n        isAuthenticated: user && Object.keys(user).length !== 0 || currentUser && Object.keys(currentUser).length !== 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoutesAuthWrapper, \"dBXFgNenCVv7zei3wMQ7/1dhb0Y=\", false, function () {\n  return [useAuthContext, useSelector];\n});\n\n_c = RoutesAuthWrapper;\n\nconst App = ({\n  store,\n  history\n}) => {\n  _s2();\n\n  const [isSidebarOpened, setIsSidebarOpened] = useState(false);\n\n  const sidebarCloseCallback = () => setIsSidebarOpened(false);\n\n  const sidebarOpenCallback = () => setIsSidebarOpened(true);\n\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(ConnectedRouter, {\n        history: history,\n        children: /*#__PURE__*/_jsxDEV(Auth, {\n          children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n            isSidebarOpened: isSidebarOpened,\n            sidebarCloseCallback: sidebarCloseCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n            onBurgerIconClickHandler: sidebarOpenCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RoutesAuthWrapper, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"WDHLVhy2znKusXveXwwlb+20pQg=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RoutesAuthWrapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/App.tsx"],"names":["React","useEffect","useState","Provider","useSelector","ConnectedRouter","Navbar","Sidebar","Routes","Auth","useAuthContext","RoutesAuthWrapper","auth","isLoading","setIsLoading","currentUser","state","user","current","setUser","getPageType","firstLoc","window","location","pathname","split","getSession","then","currUser","err","console","error","Object","keys","length","App","store","history","isSidebarOpened","setIsSidebarOpened","sidebarCloseCallback","sidebarOpenCallback"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Provider, useSelector } from \"react-redux\";\nimport { Store } from \"redux\";\nimport { History } from \"history\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport \"./App.css\";\nimport \"./App.scss\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Routes from \"./routes\";\nimport Auth, { useAuthContext } from \"./auth/auth\";\nimport { RootState } from \"./store\";\n\ninterface AppProps {\n  store: Store;\n  history: History;\n}\n\nconst RoutesAuthWrapper = () => {\n  const auth = useAuthContext();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const currentUser = useSelector((state: RootState) => state.user.current);\n  const [user, setUser] = useState({});\n\n  const getPageType = () => {\n    const firstLoc = window.location.pathname.split(\"/\")[1];\n    return firstLoc === \"hospital\" ? \"hospital\" : \"user\";\n  };\n\n  useEffect(() => {\n    if (isLoading || user === {}) {\n      try {\n        auth?.getSession().then((currUser: any) => {\n          setUser(currUser);\n        });\n      } catch (err) {\n        console.error(err);\n      }\n      setIsLoading(false);\n    }\n  }, [auth, user, isLoading]);\n\n  return (\n    <div className=\"app-content\">\n      <header className={`App-header ${getPageType()}-page`}>\n        {isLoading ? (\n          <div>LOADING...</div>\n        ) : (\n          <Routes\n            isAuthenticated={\n              (user && Object.keys(user).length !== 0) ||\n              (currentUser && Object.keys(currentUser).length !== 0)\n            }\n          />\n        )}\n      </header>\n    </div>\n  );\n};\n\nconst App: React.FC<AppProps> = ({ store, history }) => {\n  const [isSidebarOpened, setIsSidebarOpened] = useState(false);\n\n  const sidebarCloseCallback = () => setIsSidebarOpened(false);\n\n  const sidebarOpenCallback = () => setIsSidebarOpened(true);\n\n  return (\n    <Provider store={store}>\n      <div className=\"app-container\">\n        <ConnectedRouter history={history}>\n          <Auth>\n            <Sidebar\n              isSidebarOpened={isSidebarOpened}\n              sidebarCloseCallback={sidebarCloseCallback}\n            />\n            <Navbar onBurgerIconClickHandler={sidebarOpenCallback} />\n            <RoutesAuthWrapper />\n          </Auth>\n        </ConnectedRouter>\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}