{"ast":null,"code":"import _slicedToArray from\"/Users/haesol/Desktop/mediround-user-web-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useAuthContext}from\"../auth/auth\";import{getUser}from\"../aws/UserPool\";import Button from\"../components/Button/Button\";import InfoInput from\"../components/Input/InfoInput\";import{phoneLocaleList}from\"../utils\";import\"./Forgot.scss\";import{FormattedMessage}from\"react-intl\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Forgot=function Forgot(props){var auth=useAuthContext();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),phoneDigit=_useState2[0],setPhoneDigit=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),phoneLocale=_useState4[0],setPhoneLocale=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),phone=_useState6[0],setPhone=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isCodeSent=_useState8[0],setIsCodeSent=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),cachedPhone=_useState10[0],setCachedPhone=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),codeRecvInProgress=_useState12[0],setCodeRecvInProgress=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),code=_useState14[0],setCode=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),password=_useState16[0],setPassword=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),rePassword=_useState18[0],setRePassword=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),isChangePwdInProgress=_useState20[0],setIsChangePwdInProgress=_useState20[1];useEffect(function(){// Determines phone number i.e. username\nvar fullPhone=phoneLocale+phoneDigit;setPhone(fullPhone);},[phoneLocale,phoneDigit]);var forgotPasswdHandler=function forgotPasswdHandler(){setCodeRecvInProgress(true);getUser(phone).forgotPassword({onSuccess:function onSuccess(data){console.log(\"onSuccsess:\",data);},onFailure:function onFailure(err){setCodeRecvInProgress(false);console.error(\"onFailure:\",err);},inputVerificationCode:function inputVerificationCode(data){setCachedPhone(phone);setIsCodeSent(true);setCodeRecvInProgress(false);}});};var resendCodeHandler=function resendCodeHandler(){setCodeRecvInProgress(true);getUser(cachedPhone).resendConfirmationCode(function(err){if(err){console.error(err);}else{setCodeRecvInProgress(false);}});};var changePasswdHandler=function changePasswdHandler(){setIsChangePwdInProgress(true);// TODO: show Error message if password and rePassword are different\ngetUser(cachedPhone).confirmPassword(code,password,{onSuccess:function onSuccess(){auth===null||auth===void 0?void 0:auth.authenticate(cachedPhone,password).then(function(){props.history.push(\"/mypage\");}).catch(function(err){setIsChangePwdInProgress(false);console.error(err);});},onFailure:function onFailure(err){setIsChangePwdInProgress(false);console.error(\"onFailure:\",err);}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"forgot-page-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"forgot-page-title\",children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"logIn.forgotYourPassword\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"forgot-page-sub-title\",children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"forget.text\"})}),/*#__PURE__*/_jsx(InfoInput,{title:\"Phone number\",titleId:\"logIn.phone\",type:\"tel\",value:phoneDigit,onChange:function onChange(e){return setPhoneDigit(e.target.value);},buttonText:isCodeSent&&phone===cachedPhone?\"재전송\":\"코드 전송\",buttonDisabled:phoneDigit===\"\",onButtonClick:isCodeSent&&phone===cachedPhone?resendCodeHandler:forgotPasswdHandler,buttonLoading:codeRecvInProgress,optionVals:phoneLocaleList.map(function(obj){return obj.value;}),optionKeys:phoneLocaleList.map(function(obj){return obj.icon+\" \"+obj.value;}),onSelectChange:function onSelectChange(e){return setPhoneLocale(e.target.value);}}),isCodeSent&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(InfoInput,{title:\"Code\",value:code,onChange:function onChange(e){return setCode(e.target.value);},width:\"calc(100% - 144px)\"}),/*#__PURE__*/_jsx(InfoInput,{title:\"New password (at least 8 characters)\",type:\"password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/_jsx(InfoInput,{title:\"Re-enter new password\",type:\"password\",value:rePassword,onChange:function onChange(e){return setRePassword(e.target.value);}}),/*#__PURE__*/_jsx(Button,{text:\"Change password\",textId:\"button.changePassword\",shape:\"round\",theme:\"primary\",isDisabled:code===\"\"||password===\"\"||rePassword===\"\"||password!==rePassword,isLoading:isChangePwdInProgress,onClick:changePasswdHandler})]})]});};export default Forgot;","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/pages/Forgot.tsx"],"names":["React","useState","useEffect","useAuthContext","getUser","Button","InfoInput","phoneLocaleList","FormattedMessage","Forgot","props","auth","phoneDigit","setPhoneDigit","phoneLocale","setPhoneLocale","phone","setPhone","isCodeSent","setIsCodeSent","cachedPhone","setCachedPhone","codeRecvInProgress","setCodeRecvInProgress","code","setCode","password","setPassword","rePassword","setRePassword","isChangePwdInProgress","setIsChangePwdInProgress","fullPhone","forgotPasswdHandler","forgotPassword","onSuccess","data","console","log","onFailure","err","error","inputVerificationCode","resendCodeHandler","resendConfirmationCode","changePasswdHandler","confirmPassword","authenticate","then","history","push","catch","e","target","value","map","obj","icon"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,OAASC,cAAT,KAA+B,cAA/B,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,+BAAtB,CACA,OAASC,eAAT,KAAgC,UAAhC,CACA,MAAO,eAAP,CACA,OAASC,gBAAT,KAAiC,YAAjC,C,6IAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAgC,CAC7C,GAAMC,CAAAA,IAAI,CAAGR,cAAc,EAA3B,CAD6C,cAETF,QAAQ,CAAC,EAAD,CAFC,wCAEtCW,UAFsC,eAE1BC,aAF0B,8BAGPZ,QAAQ,CAAC,EAAD,CAHD,yCAGtCa,WAHsC,eAGzBC,cAHyB,8BAInBd,QAAQ,CAAC,EAAD,CAJW,yCAItCe,KAJsC,eAI/BC,QAJ+B,8BAKThB,QAAQ,CAAC,KAAD,CALC,yCAKtCiB,UALsC,eAK1BC,aAL0B,8BAMPlB,QAAQ,CAAC,EAAD,CAND,0CAMtCmB,WANsC,gBAMzBC,cANyB,gCAOOpB,QAAQ,CAAC,KAAD,CAPf,2CAOtCqB,kBAPsC,gBAOlBC,qBAPkB,gCAQrBtB,QAAQ,CAAC,EAAD,CARa,2CAQtCuB,IARsC,gBAQhCC,OARgC,gCASbxB,QAAQ,CAAC,EAAD,CATK,2CAStCyB,QATsC,gBAS5BC,WAT4B,gCAUT1B,QAAQ,CAAC,EAAD,CAVC,2CAUtC2B,UAVsC,gBAU1BC,aAV0B,gCAWa5B,QAAQ,CAAC,KAAD,CAXrB,2CAWtC6B,qBAXsC,gBAWfC,wBAXe,gBAa7C7B,SAAS,CAAC,UAAM,CACd;AACA,GAAM8B,CAAAA,SAAS,CAAGlB,WAAW,CAAGF,UAAhC,CACAK,QAAQ,CAACe,SAAD,CAAR,CACD,CAJQ,CAIN,CAAClB,WAAD,CAAcF,UAAd,CAJM,CAAT,CAMA,GAAMqB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAChCV,qBAAqB,CAAC,IAAD,CAArB,CACAnB,OAAO,CAACY,KAAD,CAAP,CAAekB,cAAf,CAA8B,CAC5BC,SAAS,CAAE,mBAACC,IAAD,CAAU,CACnBC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA2BF,IAA3B,EACD,CAH2B,CAI5BG,SAAS,CAAE,mBAACC,GAAD,CAAS,CAClBjB,qBAAqB,CAAC,KAAD,CAArB,CACAc,OAAO,CAACI,KAAR,CAAc,YAAd,CAA4BD,GAA5B,EACD,CAP2B,CAQ5BE,qBAAqB,CAAE,+BAACN,IAAD,CAAU,CAC/Bf,cAAc,CAACL,KAAD,CAAd,CACAG,aAAa,CAAC,IAAD,CAAb,CACAI,qBAAqB,CAAC,KAAD,CAArB,CACD,CAZ2B,CAA9B,EAcD,CAhBD,CAkBA,GAAMoB,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BpB,qBAAqB,CAAC,IAAD,CAArB,CACAnB,OAAO,CAACgB,WAAD,CAAP,CAAqBwB,sBAArB,CAA4C,SAACJ,GAAD,CAAS,CACnD,GAAIA,GAAJ,CAAS,CACPH,OAAO,CAACI,KAAR,CAAcD,GAAd,EACD,CAFD,IAEO,CACLjB,qBAAqB,CAAC,KAAD,CAArB,CACD,CACF,CAND,EAOD,CATD,CAWA,GAAMsB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAChCd,wBAAwB,CAAC,IAAD,CAAxB,CACA;AACA3B,OAAO,CAACgB,WAAD,CAAP,CAAqB0B,eAArB,CAAqCtB,IAArC,CAA2CE,QAA3C,CAAqD,CACnDS,SAAS,CAAE,oBAAM,CACfxB,IAAI,OAAJ,EAAAA,IAAI,SAAJ,QAAAA,IAAI,CACAoC,YADJ,CACiB3B,WADjB,CAC8BM,QAD9B,EAEGsB,IAFH,CAEQ,UAAM,CACVtC,KAAK,CAACuC,OAAN,CAAcC,IAAd,CAAmB,SAAnB,EACD,CAJH,EAKGC,KALH,CAKS,SAACX,GAAD,CAAS,CACdT,wBAAwB,CAAC,KAAD,CAAxB,CACAM,OAAO,CAACI,KAAR,CAAcD,GAAd,EACD,CARH,EASD,CAXkD,CAYnDD,SAAS,CAAE,mBAACC,GAAD,CAAS,CAClBT,wBAAwB,CAAC,KAAD,CAAxB,CACAM,OAAO,CAACI,KAAR,CAAc,YAAd,CAA4BD,GAA5B,EACD,CAfkD,CAArD,EAiBD,CApBD,CAsBA,mBACE,aAAK,SAAS,CAAC,uBAAf,wBACE,YAAK,SAAS,CAAC,mBAAf,uBACE,KAAC,gBAAD,EAAkB,EAAE,CAAC,0BAArB,EADF,EADF,cAIE,YAAK,SAAS,CAAC,uBAAf,uBACE,KAAC,gBAAD,EAAkB,EAAE,CAAC,aAArB,EADF,EAJF,cAOE,KAAC,SAAD,EACE,KAAK,CAAC,cADR,CAEE,OAAO,CAAC,aAFV,CAGE,IAAI,CAAC,KAHP,CAIE,KAAK,CAAE5B,UAJT,CAKE,QAAQ,CAAE,kBAACwC,CAAD,QAAOvC,CAAAA,aAAa,CAACuC,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB,EALZ,CAME,UAAU,CACRpC,UAAU,EAAIF,KAAK,GAAKI,WAAxB,CAAsC,KAAtC,CAA8C,OAPlD,CASE,cAAc,CAAER,UAAU,GAAK,EATjC,CAUE,aAAa,CACXM,UAAU,EAAIF,KAAK,GAAKI,WAAxB,CACIuB,iBADJ,CAEIV,mBAbR,CAeE,aAAa,CAAEX,kBAfjB,CAgBE,UAAU,CAAEf,eAAe,CAACgD,GAAhB,CAAoB,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACF,KAAb,EAApB,CAhBd,CAiBE,UAAU,CAAE/C,eAAe,CAACgD,GAAhB,CAAoB,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,CAAW,GAAX,CAAiBD,GAAG,CAACF,KAA9B,EAApB,CAjBd,CAkBE,cAAc,CAAE,wBAACF,CAAD,QAAOrC,CAAAA,cAAc,CAACqC,CAAC,CAACC,MAAF,CAASC,KAAV,CAArB,EAlBlB,EAPF,CA2BGpC,UAAU,eACT,wCACE,KAAC,SAAD,EACE,KAAK,CAAC,MADR,CAEE,KAAK,CAAEM,IAFT,CAGE,QAAQ,CAAE,kBAAC4B,CAAD,QAAO3B,CAAAA,OAAO,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,EAHZ,CAIE,KAAK,CAAC,oBAJR,EADF,cAOE,KAAC,SAAD,EACE,KAAK,CAAC,sCADR,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAE5B,QAHT,CAIE,QAAQ,CAAE,kBAAC0B,CAAD,QAAOzB,CAAAA,WAAW,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EAJZ,EAPF,cAaE,KAAC,SAAD,EACE,KAAK,CAAC,uBADR,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAE1B,UAHT,CAIE,QAAQ,CAAE,kBAACwB,CAAD,QAAOvB,CAAAA,aAAa,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB,EAJZ,EAbF,cAmBE,KAAC,MAAD,EACE,IAAI,CAAC,iBADP,CAEE,MAAM,CAAC,uBAFT,CAGE,KAAK,CAAC,OAHR,CAIE,KAAK,CAAC,SAJR,CAKE,UAAU,CACR9B,IAAI,GAAK,EAAT,EACAE,QAAQ,GAAK,EADb,EAEAE,UAAU,GAAK,EAFf,EAGAF,QAAQ,GAAKE,UATjB,CAWE,SAAS,CAAEE,qBAXb,CAYE,OAAO,CAAEe,mBAZX,EAnBF,GA5BJ,GADF,CAkED,CAxID,CA0IA,cAAepC,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { useAuthContext } from \"../auth/auth\";\nimport { getUser } from \"../aws/UserPool\";\nimport Button from \"../components/Button/Button\";\nimport InfoInput from \"../components/Input/InfoInput\";\nimport { phoneLocaleList } from \"../utils\";\nimport \"./Forgot.scss\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst Forgot = (props: RouteComponentProps) => {\n  const auth = useAuthContext();\n  const [phoneDigit, setPhoneDigit] = useState(\"\");\n  const [phoneLocale, setPhoneLocale] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  const [cachedPhone, setCachedPhone] = useState(\"\");\n  const [codeRecvInProgress, setCodeRecvInProgress] = useState(false);\n  const [code, setCode] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rePassword, setRePassword] = useState(\"\");\n  const [isChangePwdInProgress, setIsChangePwdInProgress] = useState(false);\n\n  useEffect(() => {\n    // Determines phone number i.e. username\n    const fullPhone = phoneLocale + phoneDigit;\n    setPhone(fullPhone);\n  }, [phoneLocale, phoneDigit]);\n\n  const forgotPasswdHandler = () => {\n    setCodeRecvInProgress(true);\n    getUser(phone).forgotPassword({\n      onSuccess: (data) => {\n        console.log(\"onSuccsess:\", data);\n      },\n      onFailure: (err) => {\n        setCodeRecvInProgress(false);\n        console.error(\"onFailure:\", err);\n      },\n      inputVerificationCode: (data) => {\n        setCachedPhone(phone);\n        setIsCodeSent(true);\n        setCodeRecvInProgress(false);\n      },\n    });\n  };\n\n  const resendCodeHandler = () => {\n    setCodeRecvInProgress(true);\n    getUser(cachedPhone).resendConfirmationCode((err) => {\n      if (err) {\n        console.error(err);\n      } else {\n        setCodeRecvInProgress(false);\n      }\n    });\n  };\n\n  const changePasswdHandler = () => {\n    setIsChangePwdInProgress(true);\n    // TODO: show Error message if password and rePassword are different\n    getUser(cachedPhone).confirmPassword(code, password, {\n      onSuccess: () => {\n        auth\n          ?.authenticate(cachedPhone, password)\n          .then(() => {\n            props.history.push(\"/mypage\");\n          })\n          .catch((err) => {\n            setIsChangePwdInProgress(false);\n            console.error(err);\n          });\n      },\n      onFailure: (err) => {\n        setIsChangePwdInProgress(false);\n        console.error(\"onFailure:\", err);\n      },\n    });\n  };\n\n  return (\n    <div className=\"forgot-page-container\">\n      <div className=\"forgot-page-title\">\n        <FormattedMessage id=\"logIn.forgotYourPassword\" />\n      </div>\n      <div className=\"forgot-page-sub-title\">\n        <FormattedMessage id=\"forget.text\" />\n      </div>\n      <InfoInput\n        title=\"Phone number\"\n        titleId=\"logIn.phone\"\n        type=\"tel\"\n        value={phoneDigit}\n        onChange={(e) => setPhoneDigit(e.target.value)}\n        buttonText={\n          isCodeSent && phone === cachedPhone ? \"재전송\" : \"코드 전송\"\n        }\n        buttonDisabled={phoneDigit === \"\"}\n        onButtonClick={\n          isCodeSent && phone === cachedPhone\n            ? resendCodeHandler\n            : forgotPasswdHandler\n        }\n        buttonLoading={codeRecvInProgress}\n        optionVals={phoneLocaleList.map((obj) => obj.value)}\n        optionKeys={phoneLocaleList.map((obj) => obj.icon + \" \" + obj.value)}\n        onSelectChange={(e) => setPhoneLocale(e.target.value)}\n      />\n      {isCodeSent && (\n        <>\n          <InfoInput\n            title=\"Code\"\n            value={code}\n            onChange={(e) => setCode(e.target.value)}\n            width=\"calc(100% - 144px)\"\n          />\n          <InfoInput\n            title=\"New password (at least 8 characters)\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InfoInput\n            title=\"Re-enter new password\"\n            type=\"password\"\n            value={rePassword}\n            onChange={(e) => setRePassword(e.target.value)}\n          />\n          <Button\n            text=\"Change password\"\n            textId=\"button.changePassword\"\n            shape=\"round\"\n            theme=\"primary\"\n            isDisabled={\n              code === \"\" ||\n              password === \"\" ||\n              rePassword === \"\" ||\n              password !== rePassword\n            }\n            isLoading={isChangePwdInProgress}\n            onClick={changePasswdHandler}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Forgot;\n"]},"metadata":{},"sourceType":"module"}