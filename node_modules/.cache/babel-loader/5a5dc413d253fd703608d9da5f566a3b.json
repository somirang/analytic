{"ast":null,"code":"var _jsxFileName = \"/Users/haesol/Desktop/mediround-user-web-master/src/components/Button/Button.tsx\";\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./Button.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `button-container ${props.isDisabled ? \"disabled\" : props.theme} ${props.shape} ${props.size ? props.size : \"\"}`,\n    onClick: props.isDisabled || props.isLoading ? () => {} : props.onClick,\n    style: props.style ? props.style : null,\n    children: props.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `button-spinner ${props.size ? props.size : \"\"} ${props.theme ? props.theme : \"\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : props.textId ? /*#__PURE__*/_jsxDEV(FormattedMessage, {\n      id: props.textId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/components/Button/Button.tsx"],"names":["React","FormattedMessage","Button","props","isDisabled","theme","shape","size","isLoading","onClick","style","textId","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAO,eAAP;;;AAcA,MAAMC,MAAM,GAAIC,KAAD,IAAwB;AACrC,sBACE;AACE,IAAA,SAAS,EAAG,oBACVA,KAAK,CAACC,UAAN,GAAmB,UAAnB,GAAgCD,KAAK,CAACE,KACvC,IAAGF,KAAK,CAACG,KAAM,IAAGH,KAAK,CAACI,IAAN,GAAaJ,KAAK,CAACI,IAAnB,GAA0B,EAAG,EAHlD;AAIE,IAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,IAAoBD,KAAK,CAACK,SAA1B,GAAsC,MAAM,CAAE,CAA9C,GAAiDL,KAAK,CAACM,OAJlE;AAKE,IAAA,KAAK,EAAEN,KAAK,CAACO,KAAN,GAAcP,KAAK,CAACO,KAApB,GAA4B,IALrC;AAAA,cAOGP,KAAK,CAACK,SAAN,gBACC;AACE,MAAA,SAAS,EAAG,kBAAiBL,KAAK,CAACI,IAAN,GAAaJ,KAAK,CAACI,IAAnB,GAA0B,EAAG,IACxDJ,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAApB,GAA4B,EAC7B;AAHH;AAAA;AAAA;AAAA;AAAA,YADD,GAMGF,KAAK,CAACQ,MAAN,gBACF,QAAC,gBAAD;AAAkB,MAAA,EAAE,EAAER,KAAK,CAACQ;AAA5B;AAAA;AAAA;AAAA;AAAA,YADE,GAGFR,KAAK,CAACS;AAhBV;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtBD;;KAAMV,M;AAwBN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./Button.scss\";\n\nexport interface ButtonProps {\n  text: string;\n  textId?: string;\n  theme: string;\n  shape: string;\n  size?: string;\n  onClick?: () => void;\n  style?: any;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst Button = (props: ButtonProps) => {\n  return (\n    <div\n      className={`button-container ${\n        props.isDisabled ? \"disabled\" : props.theme\n      } ${props.shape} ${props.size ? props.size : \"\"}`}\n      onClick={props.isDisabled || props.isLoading ? () => {} : props.onClick}\n      style={props.style ? props.style : null}\n    >\n      {props.isLoading ? (\n        <div\n          className={`button-spinner ${props.size ? props.size : \"\"} ${\n            props.theme ? props.theme : \"\"\n          }`}\n        />\n      ) : props.textId ? (\n        <FormattedMessage id={props.textId} />\n      ) : (\n        props.text\n      )}\n    </div>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}