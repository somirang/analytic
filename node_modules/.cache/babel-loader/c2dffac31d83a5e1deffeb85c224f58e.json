{"ast":null,"code":"import _objectSpread from\"/Users/haesol/Desktop/mediround-user-web-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import Button from\"../Button/Button\";import gray_x_icon from\"../../images/gray-x-icon.svg\";import\"./Modal.scss\";import{FormattedMessage}from\"react-intl\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Modal=function Modal(props){var onClickOutsideModalHandler=props.closableByClickOutside?function(){return props.openController(false);}:function(){};return/*#__PURE__*/_jsxs(\"div\",{className:\"modal-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-box-container\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"modal-exit-icon\",src:gray_x_icon,alt:\"modal-x-icon\",onClick:function onClick(){return props.openController(false);}}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-header-container\",children:props.headerId?/*#__PURE__*/_jsx(FormattedMessage,{id:props.headerId}):props.header}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body-container\",children:props.bodyId?/*#__PURE__*/_jsx(FormattedMessage,{id:props.bodyId}):props.body}),(props.leftButtonProps||props.rightButtonProps)&&/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer-container\",children:[props.leftButtonProps&&/*#__PURE__*/_jsx(Button,_objectSpread({},props.leftButtonProps)),props.leftButtonProps&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-footer-gap\"}),props.rightButtonProps&&/*#__PURE__*/_jsx(Button,_objectSpread({},props.rightButtonProps))]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-dimmer\",onClick:onClickOutsideModalHandler})]});};export default Modal;","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/components/Modal/Modal.tsx"],"names":["React","Button","FormattedMessage","Modal","props","onClickOutsideModalHandler","closableByClickOutside","openController","gray_x_icon","headerId","header","bodyId","body","leftButtonProps","rightButtonProps"],"mappings":"qKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAoC,kBAApC,C,sDAEA,MAAO,cAAP,CACA,OAASC,gBAAT,KAAiC,YAAjC,C,wFAaA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAkB,CAC9B,GAAMC,CAAAA,0BAA0B,CAAGD,KAAK,CAACE,sBAAN,CAC/B,iBAAMF,CAAAA,KAAK,CAACG,cAAN,CAAqB,KAArB,CAAN,EAD+B,CAE/B,UAAM,CAAE,CAFZ,CAIA,mBACE,aAAK,SAAS,CAAC,iBAAf,wBACE,aAAK,SAAS,CAAC,qBAAf,wBACE,YACE,SAAS,CAAC,iBADZ,CAEE,GAAG,CAAEC,WAFP,CAGE,GAAG,CAAC,cAHN,CAIE,OAAO,CAAE,yBAAMJ,CAAAA,KAAK,CAACG,cAAN,CAAqB,KAArB,CAAN,EAJX,EADF,cAOE,YAAK,SAAS,CAAC,wBAAf,UACGH,KAAK,CAACK,QAAN,cACC,KAAC,gBAAD,EAAkB,EAAE,CAAEL,KAAK,CAACK,QAA5B,EADD,CAGCL,KAAK,CAACM,MAJV,EAPF,cAcE,YAAK,SAAS,CAAC,sBAAf,UACGN,KAAK,CAACO,MAAN,cAAe,KAAC,gBAAD,EAAkB,EAAE,CAAEP,KAAK,CAACO,MAA5B,EAAf,CAAwDP,KAAK,CAACQ,IADjE,EAdF,CAiBG,CAACR,KAAK,CAACS,eAAN,EAAyBT,KAAK,CAACU,gBAAhC,gBACC,aAAK,SAAS,CAAC,wBAAf,WACGV,KAAK,CAACS,eAAN,eAAyB,KAAC,MAAD,kBAAYT,KAAK,CAACS,eAAlB,EAD5B,CAEGT,KAAK,CAACS,eAAN,eAAyB,YAAK,SAAS,CAAC,kBAAf,EAF5B,CAGGT,KAAK,CAACU,gBAAN,eAA0B,KAAC,MAAD,kBAAYV,KAAK,CAACU,gBAAlB,EAH7B,GAlBJ,GADF,cA0BE,YAAK,SAAS,CAAC,cAAf,CAA8B,OAAO,CAAET,0BAAvC,EA1BF,GADF,CA8BD,CAnCD,CAqCA,cAAeF,CAAAA,KAAf","sourcesContent":["import React from \"react\";\nimport Button, { ButtonProps } from \"../Button/Button\";\nimport gray_x_icon from \"../../images/gray-x-icon.svg\";\nimport \"./Modal.scss\";\nimport { FormattedMessage } from \"react-intl\";\n\ninterface Props {\n  openController: React.Dispatch<React.SetStateAction<boolean>>;\n  header: string;\n  headerId?: string;\n  body: string;\n  bodyId?: string;\n  leftButtonProps?: ButtonProps;\n  rightButtonProps?: ButtonProps;\n  closableByClickOutside?: boolean;\n}\n\nconst Modal = (props: Props) => {\n  const onClickOutsideModalHandler = props.closableByClickOutside\n    ? () => props.openController(false)\n    : () => {};\n\n  return (\n    <div className=\"modal-container\">\n      <div className=\"modal-box-container\">\n        <img\n          className=\"modal-exit-icon\"\n          src={gray_x_icon}\n          alt=\"modal-x-icon\"\n          onClick={() => props.openController(false)}\n        />\n        <div className=\"modal-header-container\">\n          {props.headerId ? (\n            <FormattedMessage id={props.headerId} />\n          ) : (\n            props.header\n          )}\n        </div>\n        <div className=\"modal-body-container\">\n          {props.bodyId ? <FormattedMessage id={props.bodyId} /> : props.body}\n        </div>\n        {(props.leftButtonProps || props.rightButtonProps) && (\n          <div className=\"modal-footer-container\">\n            {props.leftButtonProps && <Button {...props.leftButtonProps} />}\n            {props.leftButtonProps && <div className=\"modal-footer-gap\"></div>}\n            {props.rightButtonProps && <Button {...props.rightButtonProps} />}\n          </div>\n        )}\n      </div>\n      <div className=\"modal-dimmer\" onClick={onClickOutsideModalHandler} />\n    </div>\n  );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}