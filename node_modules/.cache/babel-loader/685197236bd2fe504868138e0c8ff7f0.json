{"ast":null,"code":"import _regeneratorRuntime from\"/Users/haesol/Desktop/mediround-user-web-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/haesol/Desktop/mediround-user-web-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/haesol/Desktop/mediround-user-web-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{fetchHospitalQuotes}from\"../../../api/quote\";import RequestCard from\"../../../components/Card/RequestCard\";import{PENDING}from\"../../../utils\";import\"./Request.scss\";import{FormattedMessage}from\"react-intl\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var Loading=function Loading(props){return/*#__PURE__*/_jsx(\"div\",{className:\"hospital-loading-container \".concat(props.containerType?props.containerType:\"loading-container\"),children:\"Loading..\"});};export var EmptyDesc=function EmptyDesc(props){return/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-no-request-text\",children:props.messageId?/*#__PURE__*/_jsx(FormattedMessage,{id:props.messageId}):props.message});};var Request=function Request(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),requestQuotes=_useState4[0],setRequestQuotes=_useState4[1];useEffect(function(){setIsLoading(true);var fetchRequestQuotes=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var quotesData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchHospitalQuotes({hid:\"h1\"});case 2:quotesData=_context.sent;return _context.abrupt(\"return\",quotesData.result.filter(function(quote){return quote.status===PENDING;}));case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchRequestQuotes(){return _ref.apply(this,arguments);};}();fetchRequestQuotes().then(function(quotes){setRequestQuotes(quotes);setIsLoading(false);}).catch(function(e){console.error(\"Request\",e);setIsLoading(false);});},[]);return/*#__PURE__*/_jsx(_Fragment,{children:isLoading?/*#__PURE__*/_jsx(Loading,{}):requestQuotes.length===0?/*#__PURE__*/_jsx(EmptyDesc,{message:\"You haven\\u2019t received any quotes yet.\",messageId:\"quote.youHaveNot\"}):/*#__PURE__*/_jsx(\"div\",{className:\"hospital-mypage-request-container\",children:requestQuotes.map(function(quote,ind){return/*#__PURE__*/_jsx(RequestCard,{quoteData:quote},ind);})})});};export default Request;","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/pages/Hospital/Containers/Request.tsx"],"names":["React","useEffect","useState","fetchHospitalQuotes","RequestCard","PENDING","FormattedMessage","Loading","props","containerType","EmptyDesc","messageId","message","Request","isLoading","setIsLoading","requestQuotes","setRequestQuotes","fetchRequestQuotes","hid","quotesData","result","filter","quote","status","then","quotes","catch","e","console","error","length","map","ind"],"mappings":"+eAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,mBAAT,KAAoC,oBAApC,CACA,MAAOC,CAAAA,WAAP,KAAwC,sCAAxC,CACA,OAASC,OAAT,KAAwB,gBAAxB,CAEA,MAAO,gBAAP,CACA,OAASC,gBAAT,KAAiC,YAAjC,C,gGA6BA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,qBACrB,YACE,SAAS,sCACPA,KAAK,CAACC,aAAN,CAAsBD,KAAK,CAACC,aAA5B,CAA4C,mBADrC,CADX,uBADqB,EAAhB,CAeP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACF,KAAD,qBACvB,YAAK,SAAS,CAAC,iCAAf,UACGA,KAAK,CAACG,SAAN,cACC,KAAC,gBAAD,EAAkB,EAAE,CAAEH,KAAK,CAACG,SAA5B,EADD,CAGCH,KAAK,CAACI,OAJV,EADuB,EAAlB,CAUP,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,eACcX,QAAQ,CAAC,IAAD,CADtB,wCACbY,SADa,eACFC,YADE,8BAEsBb,QAAQ,CAAC,EAAD,CAF9B,yCAEbc,aAFa,eAEEC,gBAFF,eAIpBhB,SAAS,CAAC,UAAM,CACdc,YAAY,CAAC,IAAD,CAAZ,CACA,GAAMG,CAAAA,kBAAkB,0FAAG,wKAEAf,CAAAA,mBAAmB,CAAC,CAAEgB,GAAG,CAAE,IAAP,CAAD,CAFnB,QAEnBC,UAFmB,+CAGlBA,UAAU,CAACC,MAAX,CAAkBC,MAAlB,CACL,SAACC,KAAD,QAA2BA,CAAAA,KAAK,CAACC,MAAN,GAAiBnB,OAA5C,EADK,CAHkB,wDAAH,kBAAlBa,CAAAA,kBAAkB,0CAAxB,CAOAA,kBAAkB,GACfO,IADH,CACQ,SAACC,MAAD,CAAY,CAChBT,gBAAgB,CAACS,MAAD,CAAhB,CACAX,YAAY,CAAC,KAAD,CAAZ,CACD,CAJH,EAKGY,KALH,CAKS,SAACC,CAAD,CAAO,CACZC,OAAO,CAACC,KAAR,CAAc,SAAd,CAAyBF,CAAzB,EACAb,YAAY,CAAC,KAAD,CAAZ,CACD,CARH,EASD,CAlBQ,CAkBN,EAlBM,CAAT,CAoBA,mBACE,yBACGD,SAAS,cACR,KAAC,OAAD,IADQ,CAENE,aAAa,CAACe,MAAd,GAAyB,CAAzB,cACF,KAAC,SAAD,EACE,OAAO,CAAC,2CADV,CAEE,SAAS,CAAC,kBAFZ,EADE,cAMF,YAAK,SAAS,CAAC,mCAAf,UACGf,aAAa,CAACgB,GAAd,CAAkB,SAACT,KAAD,CAAQU,GAAR,CAAgB,CACjC,mBAAO,KAAC,WAAD,EAAuB,SAAS,CAAEV,KAAlC,EAAkBU,GAAlB,CAAP,CACD,CAFA,CADH,EATJ,EADF,CAkBD,CA1CD,CA4CA,cAAepB,CAAAA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchHospitalQuotes } from \"../../../api/quote\";\nimport RequestCard, { QuoteProps } from \"../../../components/Card/RequestCard\";\nimport { PENDING } from \"../../../utils\";\nimport { Hospital } from \"./Preview\";\nimport \"./Request.scss\";\nimport { FormattedMessage } from \"react-intl\";\n\ninterface UserInfoProps {\n  name: string;\n}\n\ninterface QuoteInfoProps {\n  quote: QuoteProps[];\n  comment: string;\n  timestamp: number;\n  id: string;\n}\n\nexport interface QuoteDataProps {\n  status: string;\n  userInfo: UserInfoProps;\n  quoteInfo: QuoteInfoProps;\n  hospitalInfo: Hospital;\n  isRead?: boolean;\n  responseTime?: number;\n  consultTime?: number;\n  suggestedSurgeries?: any;\n  meetLinks?: string[];\n}\n\ninterface LoadingProps {\n  containerType?: string;\n}\n\nexport const Loading = (props: LoadingProps) => (\n  <div\n    className={`hospital-loading-container ${\n      props.containerType ? props.containerType : \"loading-container\"\n    }`}\n  >\n    Loading..\n  </div>\n);\n\ninterface DescProps {\n  message: string;\n  messageId?: string;\n}\n\nexport const EmptyDesc = (props: DescProps) => (\n  <div className=\"hospital-mypage-no-request-text\">\n    {props.messageId ? (\n      <FormattedMessage id={props.messageId} />\n    ) : (\n      props.message\n    )}\n  </div>\n);\n\nconst Request = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [requestQuotes, setRequestQuotes] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchRequestQuotes = async () => {\n      // TODO: get hospital Id\n      const quotesData = await fetchHospitalQuotes({ hid: \"h1\" });\n      return quotesData.result.filter(\n        (quote: QuoteDataProps) => quote.status === PENDING,\n      );\n    };\n    fetchRequestQuotes()\n      .then((quotes) => {\n        setRequestQuotes(quotes);\n        setIsLoading(false);\n      })\n      .catch((e) => {\n        console.error(\"Request\", e);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loading />\n      ) : requestQuotes.length === 0 ? (\n        <EmptyDesc\n          message=\"You havenâ€™t received any quotes yet.\"\n          messageId=\"quote.youHaveNot\"\n        />\n      ) : (\n        <div className=\"hospital-mypage-request-container\">\n          {requestQuotes.map((quote, ind) => {\n            return <RequestCard key={ind} quoteData={quote} />;\n          })}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Request;\n"]},"metadata":{},"sourceType":"module"}