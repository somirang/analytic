{"ast":null,"code":"import _regeneratorRuntime from\"/Users/haesol/Desktop/mediround-user-web-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/haesol/Desktop/mediround-user-web-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import{headers}from\".\";import config from\"../config\";export var postQuote=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(body){var _res;var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post(config.API_ENDPOINT+\"/quote\",body,headers);case 3:res=_context.sent;_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.log(\"PostQuoteError\",_context.t0);case 9:return _context.abrupt(\"return\",((_res=res)===null||_res===void 0?void 0:_res.status)===204);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);}));return function postQuote(_x){return _ref.apply(this,arguments);};}();export var fetchHospitalQuotes=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(queryString){var _res2;var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(config.API_ENDPOINT+\"/quotes/hospital?hid=\".concat(queryString.hid),headers);case 3:res=_context2.sent;_context2.next=9;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);console.log(\"FetchHospitalQuotesError\",_context2.t0);case 9:return _context2.abrupt(\"return\",(_res2=res)===null||_res2===void 0?void 0:_res2.data);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,6]]);}));return function fetchHospitalQuotes(_x2){return _ref2.apply(this,arguments);};}();export var fetchUserQuotes=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(queryString){var _res3;var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.get(config.API_ENDPOINT+\"/quotes/user?sub=\".concat(queryString.sub),headers);case 3:res=_context3.sent;_context3.next=9;break;case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);console.log(\"FetchUserQuotesError\",_context3.t0);case 9:return _context3.abrupt(\"return\",(_res3=res)===null||_res3===void 0?void 0:_res3.data);case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return function fetchUserQuotes(_x3){return _ref3.apply(this,arguments);};}();export var getHospitalQuote=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(queryString){var _res4;var res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return axios.get(config.API_ENDPOINT+\"/quote/hospital?hid=\".concat(queryString.hid,\"&qid=\").concat(queryString.qid),headers);case 3:res=_context4.sent;_context4.next=9;break;case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);console.log(\"GetHospitalQuoteError\",_context4.t0);case 9:return _context4.abrupt(\"return\",(_res4=res)===null||_res4===void 0?void 0:_res4.data);case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,6]]);}));return function getHospitalQuote(_x4){return _ref4.apply(this,arguments);};}();export var respondQuote=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(body){var _res5;var res;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return axios.put(config.API_ENDPOINT+\"/quote/respond\",body,headers);case 3:res=_context5.sent;_context5.next=9;break;case 6:_context5.prev=6;_context5.t0=_context5[\"catch\"](0);console.log(\"RespondQuoteError\",_context5.t0);case 9:return _context5.abrupt(\"return\",((_res5=res)===null||_res5===void 0?void 0:_res5.status)===204);case 10:case\"end\":return _context5.stop();}}},_callee5,null,[[0,6]]);}));return function respondQuote(_x5){return _ref5.apply(this,arguments);};}();export var matchQuote=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(body){var _res6;var res;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return axios.put(config.API_ENDPOINT+\"/quote/match\",body,headers);case 3:res=_context6.sent;_context6.next=9;break;case 6:_context6.prev=6;_context6.t0=_context6[\"catch\"](0);console.log(\"MatchQuoteError\",_context6.t0);case 9:return _context6.abrupt(\"return\",((_res6=res)===null||_res6===void 0?void 0:_res6.status)===204);case 10:case\"end\":return _context6.stop();}}},_callee6,null,[[0,6]]);}));return function matchQuote(_x6){return _ref6.apply(this,arguments);};}();export var rejectQuote=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(body){var _res7;var res;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;_context7.next=3;return axios.put(config.API_ENDPOINT+\"/quote/reject\",body,headers);case 3:res=_context7.sent;_context7.next=9;break;case 6:_context7.prev=6;_context7.t0=_context7[\"catch\"](0);console.log(\"RejectQuoteError\",_context7.t0);case 9:return _context7.abrupt(\"return\",((_res7=res)===null||_res7===void 0?void 0:_res7.status)===204);case 10:case\"end\":return _context7.stop();}}},_callee7,null,[[0,6]]);}));return function rejectQuote(_x7){return _ref7.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/api/quote.ts"],"names":["axios","headers","config","postQuote","body","post","API_ENDPOINT","res","console","log","status","fetchHospitalQuotes","queryString","get","hid","data","fetchUserQuotes","sub","getHospitalQuote","qid","respondQuote","put","matchQuote","rejectQuote"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { headers } from \".\";\nimport config from \"../config\";\n\ninterface PostQuoteParams {\n  sub: string;\n  quote: any;\n  comment: string;\n  timestamp: number;\n}\n\nexport const postQuote = async (body: PostQuoteParams) => {\n  let res;\n  try {\n    res = await axios.post(config.API_ENDPOINT + \"/quote\", body, headers);\n  } catch (e) {\n    console.log(\"PostQuoteError\", e);\n  }\n  return res?.status === 204;\n};\n\ninterface FetchHospitalQuotesParams {\n  hid: string;\n}\n\nexport const fetchHospitalQuotes = async (\n  queryString: FetchHospitalQuotesParams,\n) => {\n  let res;\n  try {\n    res = await axios.get(\n      config.API_ENDPOINT + `/quotes/hospital?hid=${queryString.hid}`,\n      headers,\n    );\n  } catch (e) {\n    console.log(\"FetchHospitalQuotesError\", e);\n  }\n  return res?.data;\n};\n\ninterface FetchUserQuotesParams {\n  sub: string;\n}\n\nexport const fetchUserQuotes = async (queryString: FetchUserQuotesParams) => {\n  let res;\n  try {\n    res = await axios.get(\n      config.API_ENDPOINT + `/quotes/user?sub=${queryString.sub}`,\n      headers,\n    );\n  } catch (e) {\n    console.log(\"FetchUserQuotesError\", e);\n  }\n  return res?.data;\n};\n\ninterface GetHospitalQuoteParams {\n  hid: string;\n  qid: string;\n}\n\nexport const getHospitalQuote = async (queryString: GetHospitalQuoteParams) => {\n  let res;\n  try {\n    res = await axios.get(\n      config.API_ENDPOINT +\n        `/quote/hospital?hid=${queryString.hid}&qid=${queryString.qid}`,\n      headers,\n    );\n  } catch (e) {\n    console.log(\"GetHospitalQuoteError\", e);\n  }\n  return res?.data;\n};\n\ninterface RespondQuoteParams {\n  qid: string;\n  hid: string;\n  suggestedSurgeries: any;\n  responseTime: number;\n  meetLinks: string[];\n}\n\nexport const respondQuote = async (body: RespondQuoteParams) => {\n  let res;\n  try {\n    res = await axios.put(\n      config.API_ENDPOINT + \"/quote/respond\",\n      body,\n      headers,\n    );\n  } catch (e) {\n    console.log(\"RespondQuoteError\", e);\n  }\n  return res?.status === 204;\n};\n\ninterface MatchQuoteParams {\n  qid: string;\n  hid: string;\n  consultTime: number;\n}\n\nexport const matchQuote = async (body: MatchQuoteParams) => {\n  let res;\n  try {\n    res = await axios.put(config.API_ENDPOINT + \"/quote/match\", body, headers);\n  } catch (e) {\n    console.log(\"MatchQuoteError\", e);\n  }\n  return res?.status === 204;\n};\n\ninterface RejectQuoteParams {\n  qid: string;\n  hid: string;\n}\n\nexport const rejectQuote = async (body: RejectQuoteParams) => {\n  let res;\n  try {\n    res = await axios.put(config.API_ENDPOINT + \"/quote/reject\", body, headers);\n  } catch (e) {\n    console.log(\"RejectQuoteError\", e);\n  }\n  return res?.status === 204;\n};\n"]},"metadata":{},"sourceType":"module"}