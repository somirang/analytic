{"ast":null,"code":"var _jsxFileName = \"/Users/haesol/Desktop/mediround-user-web-master/src/pages/My/Reserve.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getHospital } from \"../../api/hospital\";\nimport Button from \"../../components/Button/Button\";\nimport CalendarCarousel from \"../../components/Input/CalendarCarousel\";\nimport TimeMultipleSelection from \"../../components/Input/TimeMultipleSelection\";\nimport hospital_profile_default from \"../../images/hospital_profile_default.svg\";\nimport { Loading } from \"../Hospital/Containers/Request\";\nimport moment from \"moment\";\nimport \"moment-timezone\";\nimport \"./Reserve.scss\";\nimport { msOneHour } from \"../../utils\";\nimport { matchQuote } from \"../../api/quote\";\nimport { FormattedMessage } from \"react-intl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Reserve = props => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSending, setIsSending] = useState(false);\n  const [date, setDate] = useState(\"\");\n  const [fullDate, setFullDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [hospital, setHospital] = useState();\n  useEffect(() => {\n    setIsLoading(true);\n\n    const initHospital = async () => {\n      // TODO: get hospital ID\n      const hospitalData = await getHospital({\n        hid: props.match.params.hid\n      });\n      const hospital = hospitalData.result;\n      setHospital(hospital);\n    };\n\n    initHospital().then(() => {\n      setIsLoading(false);\n    }).catch(e => {\n      console.error(\"Reserve\", e);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const matchQuoteHandler = async () => {\n    setIsSending(true);\n    const t = moment.tz(`${fullDate} ${time}`, \"Asia/Seoul\");\n    const consultTime = t.valueOf() + msOneHour;\n    const isSuccess = await matchQuote({\n      hid: props.match.params.hid,\n      qid: props.match.params.qid,\n      consultTime\n    });\n\n    if (isSuccess) {\n      setIsSending(false);\n      props.history.push(\"/mypage/waiting\");\n    } else {\n      setIsSending(false); // TODO: show modal error\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reserve-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reserve-hospital-desc-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reserve-hospital-header-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reserve-hospital-profile-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"reserve-hospital-profile-img\",\n              src: hospital_profile_default,\n              alt: \"hospital_profile_img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reserve-hospital-name\",\n            children: hospital === null || hospital === void 0 ? void 0 : hospital.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reserve-hospital-body-container\",\n          children: hospital === null || hospital === void 0 ? void 0 : hospital.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reserve-subtitle\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"reserve.date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CalendarCarousel, {\n        date: date,\n        setDate: setDate,\n        setFullDate: setFullDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reserve-subtitle\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"reserve.time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TimeMultipleSelection, {\n        time: time,\n        setTime: setTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reserve-footer-button-container\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Reserve\",\n          textId: \"button.reserve\",\n          shape: \"round\",\n          theme: \"primary\",\n          isLoading: isSending,\n          onClick: matchQuoteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Reserve, \"Lwz+GO2WF0aLa79UDVd/v8iZGmw=\");\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["/Users/haesol/Desktop/mediround-user-web-master/src/pages/My/Reserve.tsx"],"names":["React","useEffect","useState","getHospital","Button","CalendarCarousel","TimeMultipleSelection","Loading","moment","msOneHour","matchQuote","FormattedMessage","Reserve","props","isLoading","setIsLoading","isSending","setIsSending","date","setDate","fullDate","setFullDate","time","setTime","hospital","setHospital","initHospital","hospitalData","hid","match","params","result","then","catch","e","console","error","matchQuoteHandler","t","tz","consultTime","valueOf","isSuccess","qid","history","push","hospital_profile_default","name","about"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { getHospital } from \"../../api/hospital\";\nimport Button from \"../../components/Button/Button\";\nimport CalendarCarousel from \"../../components/Input/CalendarCarousel\";\nimport TimeMultipleSelection from \"../../components/Input/TimeMultipleSelection\";\nimport hospital_profile_default from \"../../images/hospital_profile_default.svg\";\nimport { Hospital } from \"../Hospital/Containers/Preview\";\nimport { Loading } from \"../Hospital/Containers/Request\";\nimport moment from \"moment\";\nimport \"moment-timezone\";\nimport \"./Reserve.scss\";\nimport { msOneHour } from \"../../utils\";\nimport { matchQuote } from \"../../api/quote\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst Reserve = (props: RouteComponentProps<any>) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSending, setIsSending] = useState(false);\n  const [date, setDate] = useState(\"\");\n  const [fullDate, setFullDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [hospital, setHospital] = useState<Hospital>();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const initHospital = async () => {\n      // TODO: get hospital ID\n      const hospitalData = await getHospital({ hid: props.match.params.hid });\n      const hospital = hospitalData.result;\n      setHospital(hospital);\n    };\n    initHospital()\n      .then(() => {\n        setIsLoading(false);\n      })\n      .catch((e) => {\n        console.error(\"Reserve\", e);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const matchQuoteHandler = async () => {\n    setIsSending(true);\n    const t = moment.tz(`${fullDate} ${time}`, \"Asia/Seoul\");\n    const consultTime = t.valueOf() + msOneHour;\n    const isSuccess = await matchQuote({\n      hid: props.match.params.hid,\n      qid: props.match.params.qid,\n      consultTime,\n    });\n    if (isSuccess) {\n      setIsSending(false);\n      props.history.push(\"/mypage/waiting\");\n    } else {\n      setIsSending(false);\n      // TODO: show modal error\n    }\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <div className=\"reserve-container\">\n          <div className=\"reserve-hospital-desc-container\">\n            <div className=\"reserve-hospital-header-container\">\n              <div className=\"reserve-hospital-profile-container\">\n                <img\n                  className=\"reserve-hospital-profile-img\"\n                  src={hospital_profile_default}\n                  alt=\"hospital_profile_img\"\n                />\n              </div>\n              <div className=\"reserve-hospital-name\">{hospital?.name!}</div>\n            </div>\n            <div className=\"reserve-hospital-body-container\">\n              {hospital?.about!}\n            </div>\n          </div>\n          <div className=\"reserve-subtitle\">\n            <FormattedMessage id=\"reserve.date\" />\n          </div>\n          <CalendarCarousel\n            date={date}\n            setDate={setDate}\n            setFullDate={setFullDate}\n          />\n          <div className=\"reserve-subtitle\">\n            <FormattedMessage id=\"reserve.time\" />\n          </div>\n          <TimeMultipleSelection time={time} setTime={setTime} />\n          <div className=\"reserve-footer-button-container\">\n            <Button\n              text=\"Reserve\"\n              textId=\"button.reserve\"\n              shape=\"round\"\n              theme=\"primary\"\n              isLoading={isSending}\n              onClick={matchQuoteHandler}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Reserve;\n"]},"metadata":{},"sourceType":"module"}